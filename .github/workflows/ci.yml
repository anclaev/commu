name: CI

on:
  push:
    branches:
      - main
      - develop

jobs:
  # test:
  #   name: Code testing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Restore cached npm dependencies
  #       id: cache-dependencies-restore
  #       uses: actions/cache/restore@v3
  #       with:
  #         path: |
  #           node_modules
  #           ~/.cache/Cypress
  #         key: npm-dependencies-${{ hashFiles('yarn.lock') }}

  #     - run: yarn install --immutable

  #     - name: Cache npm dependencies
  #       id: cache-dependencies-save
  #       uses: actions/cache/save@v3
  #       with:
  #         path: |
  #           node_modules
  #           ~/.cache/Cypress
  #         key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

  #     - uses: nrwl/nx-set-shas@v3
  #     - run: git branch --track main origin/main
  #     - run: yarn nx affected -t test

  # build:
  #   name: Build images
  #   runs-on: ubuntu-latest
  #   needs: 'test'
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Restore cached npm dependencies
  #       id: cache-dependencies-restore
  #       uses: actions/cache/restore@v3
  #       with:
  #         path: |
  #           node_modules
  #           ~/.cache/Cypress
  #         key: npm-dependencies-${{ hashFiles('yarn.lock') }}

  #     - run: yarn install --immutable

  #     - name: Cache npm dependencies
  #       id: cache-dependencies-save
  #       uses: actions/cache/save@v3
  #       with:
  #         path: |
  #           node_modules
  #           ~/.cache/Cypress
  #         key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

  #     - uses: nrwl/nx-set-shas@v3
  #     - run: git branch --track main origin/main
  #     - run: yarn nx affected -t build
  #     - run: yarn nx affected -t docker -- --base=remotes/origin/main

  deploy:
    name: Deploy apps
    runs-on: ubuntu-latest
    # needs: 'build'
    steps:
      - uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOSTNAME }}
          username: ${{ secrets.SSH_USERNAME }}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull anclaev/comduty-ui:latest
            docker ps -q --filter "name=comduty-ui" | grep -q . && docker stop comduty-ui && docker rm -fv comduty-ui
            docker run -d --network nginx-proxy-net \
            -e VIRTUAL_HOST=${{ secrets.UI_HOST }} \
            -e LETSENCRYPT_HOST=${{ secrets.UI_HOST }} \
            --name comduty-ui anclaev/comduty-ui:latest
