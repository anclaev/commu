var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.627,1,1.833]],["body/controllers/AppController.html",[0,2.938,1,2.85,2,1.982,3,0.343,4,0.343,5,0.284,6,2.965,7,0.54,8,4.598,9,4.598,10,4.598,11,0.691,12,1.502,13,5.732,14,2.965,15,0.039,16,0.691,17,3.601,18,4.598,19,4.598,20,0.989,21,1.496,22,4.598,23,0.343,24,1.063,25,0.343,26,0.195,27,0.691,28,3.601,29,0.03,30,0.03]],["title/modules/AppModule.html",[31,1.31,32,1.833]],["body/modules/AppModule.html",[1,2.906,2,2.281,3,0.293,4,0.293,5,0.242,15,0.04,23,0.514,24,0.907,25,0.293,26,0.166,29,0.027,30,0.027,31,2.077,32,3.477,33,1.514,34,1.514,35,1.905,36,1.905,37,1.905,38,2.568,39,1.905,40,2.529,41,2.529,42,2.971,43,2.971,44,2.568,45,1.905,46,1.905,47,3.072,48,3.411,49,4.143,50,4.143,51,2.529,52,2.529,53,4.687,54,4.143,55,2.529,56,3.072,57,3.072,58,3.072,59,3.072,60,3.072,61,1.362,62,3.072,63,0.523,64,3.072,65,3.072,66,3.072,67,3.072]],["title/modules/CommonModule.html",[31,1.31,42,1.627]],["body/modules/CommonModule.html",[3,0.27,4,0.27,5,0.223,15,0.04,23,0.502,24,0.836,25,0.27,26,0.153,27,0.544,29,0.025,30,0.025,31,1.991,33,1.395,34,1.395,35,1.756,36,1.756,37,1.756,38,2.786,39,2.786,42,3.113,44,2.429,45,1.756,46,1.756,48,2.332,68,2.332,69,2.332,70,2.332,71,3.214,72,3.171,73,2.832,74,3.919,75,2.832,76,2.002,77,2.832,78,0.836,79,2.832,80,2.832,81,2.832,82,2.002,83,0.755,84,2.832,85,2.832,86,3.919,87,4.494,88,2.832,89,2.832,90,0.836,91,2.332,92,2.832,93,2.832,94,2.832,95,2.832,96,2.832,97,2.832,98,2.832]],["title/injectables/ConfigService.html",[71,1.627,99,0.873]],["body/injectables/ConfigService.html",[3,0.292,4,0.292,5,0.241,7,0.62,11,0.588,12,1.351,15,0.04,16,0.794,20,0.889,21,0.904,23,0.446,24,0.904,25,0.292,26,0.166,27,0.588,29,0.027,30,0.027,63,0.522,71,2.576,76,2.165,91,4.125,99,1.221,100,1.509,101,2.521,102,2.563,103,2.922,104,4.68,105,4.134,106,1.437,107,3.062,108,4.134,109,3.062,110,0.889,111,4.68,112,3.403,113,4.134,114,4.125,115,0.797,116,0.659,117,5.01,118,4.134,119,4.134,120,3.062,121,3.062,122,0.659,123,3.062,124,3.062]],["title/classes/CreateEmployeeCommand.html",[26,0.16,125,1.627]],["body/classes/CreateEmployeeCommand.html",[3,0.26,4,0.26,5,0.215,7,0.572,11,0.523,15,0.04,16,0.733,20,0.586,23,0.42,25,0.364,26,0.206,27,0.523,29,0.025,30,0.025,61,1.951,63,0.65,78,0.805,83,0.726,90,0.805,106,1.271,110,0.586,115,0.464,116,0.586,122,0.947,125,2.625,126,0.805,127,3.112,128,0.805,129,2.424,130,1.328,131,3.141,132,1.88,133,2.1,134,1.76,135,1.423,136,2.244,137,3.549,138,1.69,139,2.729,140,1.927,141,1.343,142,1.88,143,0.586,144,1.056,145,0.985,146,1.343,147,1.951,148,0.985,149,2.244,150,1.69,151,0.985,152,1.591,153,1.09,154,0.805,155,0.891,156,1.09,157,1.69,158,1.09,159,0.891,160,1.09,161,2.244]],["title/classes/CreateEmployeeDto.html",[26,0.16,162,1.833]],["body/classes/CreateEmployeeDto.html",[3,0.305,4,0.305,5,0.252,7,0.48,15,0.04,21,1.568,23,0.405,25,0.305,26,0.23,29,0.028,30,0.028,115,0.545,126,0.944,128,0.944,129,2.342,130,1.02,135,1.134,143,0.688,162,2.638,163,2.632,164,4.494,165,4.494,166,4.494,167,3.503,168,2.632,169,2.26,170,3.937,171,4.587,172,2.632,173,2.632,174,2.632,175,2.632,176,2.632,177,2.632,178,2.632]],["title/classes/CreateEmployeeHandler.html",[26,0.16,150,1.833]],["body/classes/CreateEmployeeHandler.html",[3,0.253,4,0.253,5,0.209,7,0.562,11,0.51,12,1.225,15,0.04,16,0.72,20,0.806,23,0.414,25,0.357,26,0.203,27,0.51,29,0.024,30,0.024,61,1.177,63,0.639,78,0.784,83,0.708,90,1.282,106,1.256,110,0.806,115,0.639,116,0.806,122,0.934,125,2.737,126,0.784,127,3.069,128,0.784,129,2.39,130,1.299,131,2.187,134,1.062,135,1.256,137,2.649,139,1.647,141,1.309,142,2.139,143,0.571,144,1.193,145,0.96,146,1.309,147,2.204,148,1.354,149,2.187,150,2.323,151,1.354,152,1.797,153,1.498,154,0.784,155,1.225,156,1.062,157,2.323,158,1.736,159,1.225,160,1.062,161,2.187,179,1.647,180,2.187,181,1.647,182,2.187]],["title/controllers/EmployeeController.html",[0,1.627,183,1.833]],["body/controllers/EmployeeController.html",[0,1.904,2,0.996,3,0.172,4,0.172,5,0.143,7,0.635,11,0.347,12,0.921,14,3.214,15,0.04,16,0.75,20,1.041,21,1.552,23,0.403,24,0.534,25,0.172,26,0.098,27,0.75,29,0.018,30,0.018,61,1.248,63,0.665,90,1.552,110,0.84,115,0.665,116,0.84,122,0.964,129,2.149,130,1.439,135,1.289,139,1.746,143,0.389,154,0.534,157,1.746,159,1.581,160,1.561,162,2.623,183,1.746,184,1.49,185,1.809,186,2.817,187,2.817,188,1.746,189,2.329,190,1.49,191,3.459,192,1.809,193,1.809,194,2.817,195,1.809,196,2.729,197,2.42,198,1.49,199,2.817,200,1.809,201,3.459,202,2.817,203,1.49,204,2.329,205,2.817,206,1.809,207,2.42,208,1.388,209,2.817,210,1.809,211,1.809,212,1.704,213,1.49,214,1.809,215,1.49,216,1.809,217,1.809,218,2.817,219,1.809,220,2.817,221,2.817,222,1.809,223,1.809,224,1.809,225,1.809,226,1.809,227,1.809]],["title/modules/EmployeeModule.html",[31,1.31,43,1.627]],["body/modules/EmployeeModule.html",[2,2.391,3,0.314,4,0.314,5,0.26,15,0.039,23,0.525,24,0.974,25,0.314,26,0.178,29,0.028,30,0.028,31,2.152,33,1.625,34,1.625,35,2.045,36,2.045,37,2.045,38,3.011,39,2.045,43,3.137,44,2.693,45,2.045,46,2.045,144,1.321,145,1.192,183,3.011,212,2.713,213,2.715,228,2.715,229,2.715,230,3.298,231,3.298,232,4.344,233,4.344,234,3.298,235,4.344,236,4.344,237,3.298]],["title/injectables/EmployeeRepository.html",[99,0.873,144,0.709]],["body/injectables/EmployeeRepository.html",[3,0.323,4,0.323,5,0.267,7,0.664,15,0.04,16,0.652,23,0.497,24,1.002,25,0.323,26,0.184,29,0.029,30,0.029,63,0.578,82,2.399,83,1.479,99,1.307,100,1.672,102,2.743,103,3.128,106,1.312,110,0.73,115,0.578,116,0.73,122,0.73,130,1.181,143,0.73,144,1.061,152,1.886,154,1.002,238,2.794,239,4.924,240,3.393,241,5.413,242,3.393,243,3.393,244,3.393]],["title/injectables/EmployeeService.html",[99,0.873,212,1.457]],["body/injectables/EmployeeService.html",[3,0.161,4,0.161,5,0.133,7,0.653,11,0.324,12,0.871,15,0.04,16,0.786,20,1.016,21,1.525,23,0.45,24,0.498,25,0.161,26,0.091,27,0.721,29,0.017,30,0.017,61,1.181,63,0.697,78,0.498,83,0.449,90,1.525,99,0.787,100,0.831,102,2.329,106,0.881,110,0.88,112,3.888,115,0.697,116,0.88,122,0.98,125,0.928,129,2.068,130,1.416,135,1.214,137,2.655,139,1.652,143,0.363,147,1.181,154,0.498,155,1.227,157,1.652,159,1.543,160,1.502,188,2.329,189,2.068,190,2.195,196,2.694,197,1.652,198,2.195,203,2.195,204,2.252,207,2.329,208,1.313,212,1.313,215,1.388,245,1.388,246,2.666,247,1.686,248,4.723,249,4.862,250,1.686,251,1.884,252,1.686,253,2.666,254,1.686,255,2.666,256,1.686,257,1.884,258,1.686,259,1.686,260,0.928,261,1.686,262,0.928,263,1.686,264,1.467,265,1.686,266,1.388,267,1.686,268,1.686,269,1.322,270,1.686,271,2.666,272,1.686,273,1.686]],["title/classes/GetEmployeeHandler.html",[26,0.16,274,1.833]],["body/classes/GetEmployeeHandler.html",[3,0.255,4,0.255,5,0.211,7,0.564,11,0.513,12,1.229,15,0.04,16,0.722,20,0.809,23,0.415,25,0.359,26,0.204,27,0.513,29,0.024,30,0.024,63,0.641,78,0.789,83,0.712,90,1.286,106,1.26,110,0.809,115,0.641,116,0.809,122,0.937,126,0.789,128,0.789,130,1.301,134,1.068,135,1.26,143,0.575,144,1.195,145,0.965,146,1.316,148,1.36,151,1.36,152,1.801,153,1.504,154,0.789,155,1.229,156,1.068,158,1.741,159,1.229,179,1.656,181,1.656,197,2.332,208,1.316,251,3.654,264,2.743,269,1.068,274,2.332,275,3.078,276,3.585,277,2.672,278,2.672,279,2.199,280,3.097,281,2.199,282,2.199,283,2.199]],["title/classes/GetEmployeeQuery.html",[26,0.16,264,1.627]],["body/classes/GetEmployeeQuery.html",[3,0.261,4,0.261,5,0.216,7,0.575,11,0.526,15,0.04,16,0.736,20,0.59,23,0.421,25,0.365,26,0.207,27,0.526,29,0.025,30,0.025,63,0.653,78,0.81,83,0.73,90,0.81,106,1.274,110,0.59,115,0.467,116,0.59,122,0.95,126,0.81,128,0.81,130,1.33,132,1.888,133,2.109,134,1.766,135,1.426,136,2.257,138,1.699,140,1.938,143,0.59,144,1.059,145,0.991,146,1.351,148,0.991,151,0.991,152,1.596,153,1.096,154,0.81,155,0.896,156,1.096,158,1.096,159,0.896,197,1.699,208,2.176,251,3.556,264,2.632,269,1.096,274,1.699,275,3.122,276,3.154,279,2.257,280,4.142,281,3.636,282,2.257,283,2.257]],["title/injectables/LoggerService.html",[72,1.627,99,0.873]],["body/injectables/LoggerService.html",[3,0.265,4,0.265,5,0.219,7,0.668,11,0.534,12,1.265,15,0.04,16,0.855,20,0.957,21,1.681,23,0.265,24,0.821,25,0.265,26,0.15,27,0.534,29,0.025,30,0.025,61,1.715,63,0.659,72,2.131,99,1.143,100,1.371,102,2.399,103,2.736,106,1.282,110,0.833,115,0.659,116,0.833,122,0.833,284,2.29,285,4.812,286,3.871,287,3.871,288,4.812,289,4.451,290,5.478,291,3.871,292,3.871,293,2.782,294,2.782,295,4.639,296,2.782,297,3.871,298,3.871,299,2.782,300,3.871,301,2.782,302,2.782,303,2.29,304,2.782,305,2.782]],["title/classes/RemoveEmployeeCommand.html",[26,0.16,262,1.627]],["body/classes/RemoveEmployeeCommand.html",[3,0.258,4,0.258,5,0.214,7,0.57,11,0.52,15,0.04,16,0.73,20,0.583,21,1.479,23,0.418,25,0.362,26,0.206,27,0.52,29,0.025,30,0.025,63,0.648,78,0.8,83,0.722,90,0.8,106,1.268,110,0.583,115,0.462,116,0.583,122,0.944,126,0.8,128,0.8,130,1.326,132,1.872,133,2.092,134,1.755,135,0.722,138,1.68,140,1.916,141,1.335,142,1.872,143,0.583,144,1.053,145,0.979,146,1.335,147,2.22,148,0.979,151,0.979,152,1.586,153,1.084,154,0.8,155,0.886,156,1.084,158,1.084,159,0.886,160,1.084,188,2.721,196,2.725,257,3.363,262,2.619,269,1.084,306,3.102,307,2.231,308,2.231,309,1.68,310,2.231]],["title/classes/RemoveEmployeeHandler.html",[26,0.16,309,1.833]],["body/classes/RemoveEmployeeHandler.html",[3,0.252,4,0.252,5,0.208,7,0.56,11,0.507,12,1.22,15,0.04,16,0.717,20,0.803,21,1.102,23,0.412,25,0.356,26,0.202,27,0.507,29,0.024,30,0.024,63,0.636,78,0.78,83,0.704,90,1.278,106,1.253,110,0.803,115,0.636,116,0.803,122,0.931,126,0.78,128,0.78,130,1.297,134,1.056,135,0.704,141,1.301,142,2.133,143,0.568,144,1.19,145,0.955,146,1.301,147,2.283,148,1.349,151,1.349,152,1.793,153,1.493,154,0.78,155,1.22,156,1.056,158,1.731,159,1.22,160,1.056,179,1.638,180,2.175,181,1.638,182,2.175,188,2.683,196,2.318,257,3.06,262,2.732,269,1.056,306,3.06,308,2.175,309,2.314,310,2.175]],["title/injectables/RemovePayloadInterceptor.html",[99,0.873,311,2.09]],["body/injectables/RemovePayloadInterceptor.html",[3,0.288,4,0.288,5,0.238,7,0.615,11,0.58,12,1.339,15,0.04,16,0.58,20,0.881,23,0.39,24,0.893,25,0.288,26,0.164,27,0.787,29,0.027,30,0.027,63,0.515,99,1.21,100,1.489,110,0.65,114,3.374,115,0.515,116,0.65,122,0.881,148,1.481,151,1.093,155,1.339,266,3.374,269,1.209,295,3.374,311,2.897,312,3.374,313,2.489,314,4.098,315,4.098,316,4.098,317,4.098,318,4.098,319,5.371,320,5.209,321,3.023,322,4.098,323,4.098,324,4.098,325,4.984,326,4.098,327,4.098,328,3.023,329,2.489,330,3.023,331,3.023,332,4.098,333,3.023]],["title/classes/UpdateEmployeeCommand.html",[26,0.16,260,1.627]],["body/classes/UpdateEmployeeCommand.html",[3,0.235,4,0.235,5,0.195,7,0.534,11,0.474,15,0.04,16,0.8,20,0.531,21,1.428,23,0.397,25,0.339,26,0.192,27,0.474,29,0.023,30,0.023,63,0.71,78,0.729,83,0.658,90,0.729,106,1.288,110,0.531,115,0.421,116,0.531,122,0.981,126,0.729,128,0.729,130,1.348,132,1.752,133,2.772,134,2.014,135,1.442,138,1.53,141,1.216,142,1.752,143,0.531,144,1,145,0.892,147,2.143,148,0.892,151,0.892,152,1.507,153,0.987,154,0.729,155,0.807,156,0.987,158,0.987,159,0.807,160,0.987,189,2.772,196,2.666,207,1.53,208,2.054,260,2.511,269,0.987,307,2.032,334,3.224,335,3.98,336,2.468,337,2.468,338,2.032,339,1.53,340,2.032]],["title/classes/UpdateEmployeeDto.html",[26,0.16,204,1.627]],["body/classes/UpdateEmployeeDto.html",[3,0.303,4,0.303,5,0.25,7,0.476,15,0.04,21,1.564,23,0.404,25,0.303,26,0.229,29,0.027,30,0.027,115,0.541,126,0.938,128,0.938,130,1.016,135,1.129,143,0.683,164,4.486,165,4.486,166,4.652,167,3.488,168,2.615,169,2.245,170,3.924,171,4.579,172,2.615,173,2.615,174,2.615,175,2.615,176,2.615,177,2.615,178,2.615,189,2.332,204,2.332,341,2.615]],["title/classes/UpdateEmployeeHandler.html",[26,0.16,339,1.833]],["body/classes/UpdateEmployeeHandler.html",[3,0.242,4,0.242,5,0.2,7,0.545,11,0.488,12,1.187,15,0.04,16,0.697,20,0.781,21,1.072,23,0.404,25,0.346,26,0.196,27,0.488,29,0.023,30,0.023,63,0.619,78,0.751,83,0.677,90,1.251,106,1.303,110,0.781,115,0.619,116,0.781,122,0.994,126,0.751,128,0.751,130,1.307,133,1.999,134,1.452,135,1.303,141,1.252,142,2.088,143,0.547,144,1.173,145,0.919,147,2.254,148,1.312,151,1.312,152,1.767,153,1.452,154,0.751,155,1.187,156,1.016,158,1.694,159,1.187,160,1.016,179,1.576,181,1.576,189,2.545,196,2.278,207,2.251,208,1.252,260,2.692,269,1.016,334,2.995,335,2.99,338,2.093,339,2.251,340,2.093,342,2.542,343,2.542]],["title/coverage.html",[344,3.323]],["body/coverage.html",[0,2.213,1,1.821,5,0.232,6,2.419,15,0.039,26,0.308,29,0.026,30,0.026,61,1.302,63,0.501,71,1.617,72,1.617,99,1.523,101,2.419,125,1.617,127,2.841,128,1.682,144,0.705,150,1.821,162,1.821,163,2.419,183,1.821,184,2.419,204,1.617,212,1.448,238,2.419,245,2.419,260,1.617,262,1.617,264,1.617,274,1.821,275,2.841,284,2.419,306,2.841,309,1.821,311,2.077,312,2.419,313,2.419,334,2.841,339,1.821,341,2.419,344,2.419,345,2.938,346,2.938,347,2.938,348,5.951,349,4.581,350,5.551,351,4.019,352,4.019,353,2.938,354,2.938,355,2.938,356,2.938]],["title/dependencies.html",[34,1.752,357,2.032]],["body/dependencies.html",[15,0.04,24,0.901,26,0.223,29,0.027,30,0.027,34,1.504,51,2.513,52,2.513,55,2.513,76,2.158,78,0.901,82,2.158,83,0.813,143,0.657,169,2.158,329,2.513,358,3.053,359,5.601,360,3.053,361,3.053,362,3.053,363,3.053,364,4.125,365,3.396,366,3.053,367,3.053,368,4.672,369,3.053,370,3.053,371,3.053,372,3.053,373,3.053,374,3.053,375,3.053,376,4.125,377,3.053,378,3.053,379,3.053,380,3.053,381,3.053,382,3.053,383,3.053,384,3.053,385,3.053,386,3.053,387,3.053,388,3.053,389,4.125,390,3.053,391,3.053,392,3.053,393,3.053,394,3.053,395,3.053,396,3.053,397,4.125,398,3.053,399,3.053,400,3.053,401,3.053,402,3.053,403,3.053,404,3.053,405,3.053,406,3.053,407,3.053]],["title/index.html",[11,0.474,408,2.468,409,2.468]],["body/index.html",[15,0.035,29,0.035,30,0.035,303,3.809,410,4.627,411,4.627,412,4.627,413,4.627]],["title/modules.html",[33,1.989]],["body/modules.html",[15,0.034,29,0.034,30,0.034,32,2.721,33,2.163,42,2.417,43,2.417,365,4.554,414,5.532,415,5.532,416,5.532]],["title/overview.html",[417,3.323]],["body/overview.html",[2,1.882,15,0.038,29,0.029,30,0.029,31,1.515,32,3.448,33,1.684,34,1.684,35,2.119,36,2.119,37,2.119,38,2.119,39,2.119,40,2.814,41,2.814,42,3.195,43,3.117,44,2.756,45,2.119,46,2.119,68,2.814,69,2.814,70,2.814,71,3.117,72,3.117,100,1.684,126,1.009,144,1.185,212,2.435,228,2.814,229,2.814,417,2.814,418,3.418,419,3.418,420,3.418,421,3.418]],["title/properties.html",[132,1.752,357,2.032]],["body/properties.html",[15,0.037,29,0.034,30,0.034,132,2.257,422,4.582,423,4.582,424,4.582,425,4.582]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.0.0",{"_index":423,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["1.0.0",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":421,"title":{},"body":{"overview.html":{}}}],["10.0.1",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["17.0.0",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":419,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":418,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":420,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["6/6",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["7.92.0",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":323,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["angular/animations",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/api/src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/app.controller.ts:13",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/common/common.module.ts",{"_index":73,"title":{},"body":{"modules/CommonModule.html":{}}}],["apps/api/src/common/interceptors/remove",{"_index":312,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["apps/api/src/common/services/config.service.ts",{"_index":101,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/common/services/config.service.ts:12",{"_index":107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apps/api/src/common/services/config.service.ts:25",{"_index":109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apps/api/src/common/services/logger.service.ts",{"_index":284,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["apps/api/src/common/services/logger.service.ts:21",{"_index":296,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/common/services/logger.service.ts:29",{"_index":299,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/common/services/logger.service.ts:8",{"_index":293,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/employee/commands/create",{"_index":127,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"coverage.html":{}}}],["apps/api/src/employee/commands/remove",{"_index":306,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"coverage.html":{}}}],["apps/api/src/employee/commands/update",{"_index":334,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["apps/api/src/employee/dtos/create",{"_index":163,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"coverage.html":{}}}],["apps/api/src/employee/dtos/update",{"_index":341,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.controller.ts",{"_index":184,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.controller.ts:32",{"_index":195,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:46",{"_index":192,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:57",{"_index":206,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:74",{"_index":200,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.module.ts",{"_index":230,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["apps/api/src/employee/employee.repository.ts",{"_index":238,"title":{},"body":{"injectables/EmployeeRepository.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.repository.ts:11",{"_index":242,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["apps/api/src/employee/employee.service.ts",{"_index":245,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.service.ts:16",{"_index":250,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:29",{"_index":252,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:40",{"_index":254,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:52",{"_index":258,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:64",{"_index":256,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/queries/get",{"_index":275,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"coverage.html":{}}}],["async",{"_index":90,"title":{},"body":{"modules/CommonModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["await",{"_index":160,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["axios",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":286,"title":{},"body":{"injectables/LoggerService.html":{}}}],["baserepository",{"_index":239,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["bcrypt",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":209,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["browse",{"_index":416,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":365,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["call",{"_index":324,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["callhandler",{"_index":320,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["checking",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["class",{"_index":26,"title":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":126,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":68,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":69,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":70,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":228,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":229,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["comduty",{"_index":303,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["commamnd",{"_index":131,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{}}}],["command",{"_index":147,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["commandbus",{"_index":248,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["commandhandler",{"_index":141,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["commandhandler(createemployeecommand",{"_index":149,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{}}}],["commandhandler(removeemployeecommand",{"_index":308,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["commandhandler(updateemployeecommand",{"_index":338,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["commands",{"_index":234,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["commands/create",{"_index":259,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["commands/remove",{"_index":263,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["commands/update",{"_index":261,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["common/common.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":42,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":91,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{}}}],["config.getvalue('database_url",{"_index":96,"title":{},"body":{"modules/CommonModule.html":{}}}],["configmodule",{"_index":75,"title":{},"body":{"modules/CommonModule.html":{}}}],["configmodule.forroot",{"_index":85,"title":{},"body":{"modules/CommonModule.html":{}}}],["configservice",{"_index":71,"title":{"injectables/ConfigService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["consolelogger",{"_index":289,"title":{},"body":{"injectables/LoggerService.html":{}}}],["const",{"_index":218,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["constructor(commandbus",{"_index":247,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["constructor(ctx",{"_index":292,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(dto",{"_index":136,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{}}}],["constructor(id",{"_index":307,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{}}}],["constructor(prisma",{"_index":240,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["constructor(private",{"_index":154,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["constructor(public",{"_index":146,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["constructor(repository",{"_index":179,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["context",{"_index":295,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{}},"body":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["controller('employee",{"_index":216,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["cookie",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":344,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrsmodule",{"_index":77,"title":{},"body":{"modules/CommonModule.html":{}}}],["cqrsmodule.forroot",{"_index":84,"title":{},"body":{"modules/CommonModule.html":{}}}],["create",{"_index":129,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["create(@body",{"_index":222,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["create(dto",{"_index":190,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["created",{"_index":157,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["createemployeecommand",{"_index":125,"title":{"classes/CreateEmployeeCommand.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["createemployeecommand(dto",{"_index":268,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployeedto",{"_index":162,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["createemployeehandler",{"_index":150,"title":{"classes/CreateEmployeeHandler.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"coverage.html":{}}}],["ctx",{"_index":290,"title":{},"body":{"injectables/LoggerService.html":{}}}],["current",{"_index":297,"title":{},"body":{"injectables/LoggerService.html":{}}}],["data",{"_index":139,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["datasources",{"_index":93,"title":{},"body":{"modules/CommonModule.html":{}}}],["db",{"_index":94,"title":{},"body":{"modules/CommonModule.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["delete",{"_index":201,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["delete(':id",{"_index":199,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deleted",{"_index":202,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["documentation",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":135,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["dtos/create",{"_index":214,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dtos/update",{"_index":215,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["duty",{"_index":410,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["employee",{"_index":130,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["employee.controller",{"_index":231,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.repository",{"_index":145,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"modules/EmployeeModule.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["employee.service",{"_index":213,"title":{},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{}}}],["employee.ts",{"_index":128,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["employee.ts:14",{"_index":140,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{}}}],["employee.ts:16",{"_index":337,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{}}}],["employee.ts:17",{"_index":336,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{}}}],["employee.ts:21",{"_index":277,"title":{},"body":{"classes/GetEmployeeHandler.html":{}}}],["employee.ts:23",{"_index":180,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["employee.ts:27",{"_index":342,"title":{},"body":{"classes/UpdateEmployeeHandler.html":{}}}],["employee.ts:33",{"_index":278,"title":{},"body":{"classes/GetEmployeeHandler.html":{}}}],["employee.ts:35",{"_index":182,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["employee.ts:39",{"_index":343,"title":{},"body":{"classes/UpdateEmployeeHandler.html":{}}}],["employee.ts:9",{"_index":138,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{}}}],["employee/employee.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["employeecommandhandlers",{"_index":233,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeecommands",{"_index":232,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeecontroller",{"_index":183,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeemodule",{"_index":43,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employeequeries",{"_index":235,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeequeryhandlers",{"_index":236,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeerepository",{"_index":144,"title":{"injectables/EmployeeRepository.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"overview.html":{}}}],["employees",{"_index":153,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["employeeservice",{"_index":212,"title":{"injectables/EmployeeService.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":117,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment",{"_index":118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["er",{"_index":412,"title":{},"body":{"index.html":{}}}],["ex",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["ex.getstatus",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["excluding",{"_index":315,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["execute",{"_index":158,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["execute(undefined",{"_index":181,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["execution",{"_index":156,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["executor",{"_index":155,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["explicitconnect",{"_index":97,"title":{},"body":{"modules/CommonModule.html":{}}}],["export",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["express",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":103,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/LoggerService.html":{}}}],["fields",{"_index":208,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["filter",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["filters",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["find",{"_index":255,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["findonebyid",{"_index":246,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["findonebyid(id",{"_index":253,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["fingerprint",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":197,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["get(':id",{"_index":194,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getbyid",{"_index":187,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getbyid(@param('id",{"_index":217,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getbyid(id",{"_index":193,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployeehandler",{"_index":274,"title":{"classes/GetEmployeeHandler.html":{}},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"coverage.html":{}}}],["getemployeequery",{"_index":264,"title":{"classes/GetEmployeeQuery.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"coverage.html":{}}}],["getting",{"_index":408,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":105,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getvalue(value",{"_index":108,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":74,"title":{},"body":{"modules/CommonModule.html":{}}}],["handler",{"_index":148,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["health",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["hello",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["http",{"_index":186,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["httpexception",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["icommandhandler",{"_index":142,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["id",{"_index":196,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["identifier",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":171,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["implements",{"_index":151,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["information",{"_index":316,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["inject",{"_index":98,"title":{},"body":{"modules/CommonModule.html":{}}}],["injectable",{"_index":99,"title":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":100,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{},"overview.html":{}}}],["intercept",{"_index":317,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["intercept(_",{"_index":318,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["interceptor",{"_index":314,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["interseptor`s",{"_index":322,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["iqueryhandler",{"_index":276,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["isenum",{"_index":168,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isenum(rank",{"_index":176,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isglobal",{"_index":86,"title":{},"body":{"modules/CommonModule.html":{}}}],["isnotempty",{"_index":165,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isnumber",{"_index":167,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isoptional",{"_index":166,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isstring",{"_index":164,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["jwt",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["keyof",{"_index":123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["license",{"_index":424,"title":{},"body":{"properties.html":{}}}],["logger",{"_index":288,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":72,"title":{"injectables/LoggerService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":285,"title":{},"body":{"injectables/LoggerService.html":{}}}],["login",{"_index":177,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["map",{"_index":328,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["map((value",{"_index":331,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":112,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeService.html":{}}}],["methods",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["mit",{"_index":425,"title":{},"body":{"properties.html":{}}}],["model",{"_index":413,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":115,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["native",{"_index":287,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nest",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":327,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["nestjs",{"_index":82,"title":{},"body":{"modules/CommonModule.html":{},"injectables/EmployeeRepository.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":76,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":78,"title":{},"body":{"modules/CommonModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["next",{"_index":319,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["next.handle().pipe",{"_index":330,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["node",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":210,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["notfoundexception('employee",{"_index":221,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["null",{"_index":269,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["number",{"_index":174,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["observable",{"_index":325,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["optional",{"_index":116,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["overview",{"_index":417,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":357,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":122,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["param('id",{"_index":224,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["parser",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":178,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["payload.ts",{"_index":313,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["payload.ts:15",{"_index":321,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["personal_key",{"_index":175,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["post",{"_index":191,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["prefix",{"_index":185,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["prisma",{"_index":83,"title":{},"body":{"modules/CommonModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"dependencies.html":{}}}],["prisma.employeecreateinput",{"_index":137,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{}}}],["prisma.employeeupdateinput",{"_index":335,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["prisma.employeewhereuniqueinput",{"_index":280,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["prisma/client",{"_index":143,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"dependencies.html":{}}}],["prismamodule",{"_index":81,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismamodule.forrootasync",{"_index":88,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismaoptions",{"_index":92,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismaservice",{"_index":241,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["private",{"_index":266,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/RemovePayloadInterceptor.html":{}}}],["promise",{"_index":159,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["properties",{"_index":132,"title":{"properties.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{},"properties.html":{}}}],["provide",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["public",{"_index":133,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["put",{"_index":211,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["put(':id",{"_index":205,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["queries",{"_index":237,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["queries/get",{"_index":265,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["query",{"_index":251,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["querybus",{"_index":249,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["queryhandler",{"_index":279,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["queryhandler(getemployeequery",{"_index":282,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["rank",{"_index":170,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["raven",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["raveninterceptor",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["ravenmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":134,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["reflect",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":188,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["remove(@param('id",{"_index":226,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["remove(id",{"_index":198,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["removed",{"_index":257,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["removeemployeecommand",{"_index":262,"title":{"classes/RemoveEmployeeCommand.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"coverage.html":{}}}],["removeemployeecommand(id",{"_index":273,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["removeemployeehandler",{"_index":309,"title":{"classes/RemoveEmployeeHandler.html":{}},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"coverage.html":{}}}],["removepayloadinterceptor",{"_index":311,"title":{"injectables/RemovePayloadInterceptor.html":{}},"body":{"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["repository",{"_index":152,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeRepository.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["response",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["rootservice",{"_index":104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["route",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":329,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{},"dependencies.html":{}}}],["salary",{"_index":173,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["sentry/node",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["sentry/profiling",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["service",{"_index":102,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{}}}],["services/config.service",{"_index":79,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/logger.service",{"_index":80,"title":{},"body":{"modules/CommonModule.html":{}}}],["set",{"_index":300,"title":{},"body":{"injectables/LoggerService.html":{}}}],["setctx",{"_index":291,"title":{},"body":{"injectables/LoggerService.html":{}}}],["setctx(ctx",{"_index":298,"title":{},"body":{"injectables/LoggerService.html":{}}}],["shared/classes/base.repository",{"_index":243,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["shared/interfaces/env",{"_index":120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["started",{"_index":409,"title":{"index.html":{}},"body":{}}],["statements",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["stream",{"_index":326,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["super",{"_index":121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["super(ctx",{"_index":302,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super(prisma.employee",{"_index":244,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["support",{"_index":414,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":172,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["svg",{"_index":415,"title":{},"body":{"modules.html":{}}}],["system",{"_index":411,"title":{},"body":{"index.html":{}}}],["t",{"_index":111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["table",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["this.commandbus.execute",{"_index":267,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.commandbus.execute(new",{"_index":271,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.context",{"_index":304,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.employeeservice.create(dto",{"_index":223,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findonebyid(id",{"_index":219,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.remove(id",{"_index":227,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.update(id",{"_index":225,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.get(value",{"_index":124,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.querybus.execute",{"_index":270,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.repository.create(dto",{"_index":161,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{}}}],["this.repository.findone(dto",{"_index":283,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["this.repository.remove(id",{"_index":310,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["this.repository.update(id",{"_index":340,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["this.setcontext(ctx",{"_index":305,"title":{},"body":{"injectables/LoggerService.html":{}}}],["throw",{"_index":220,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["transformer",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":87,"title":{},"body":{"modules/CommonModule.html":{}}}],["tslib",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["typed",{"_index":113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["undefined",{"_index":333,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["unique",{"_index":281,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["update",{"_index":189,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["update(id",{"_index":203,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updated",{"_index":207,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["updateemployeecommand",{"_index":260,"title":{"classes/UpdateEmployeeCommand.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["updateemployeecommand(id",{"_index":272,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updateemployeedto",{"_index":204,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateemployeehandler",{"_index":339,"title":{"classes/UpdateEmployeeHandler.html":{}},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["url",{"_index":95,"title":{},"body":{"modules/CommonModule.html":{}}}],["usefactory",{"_index":89,"title":{},"body":{"modules/CommonModule.html":{}}}],["usevalue",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":169,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"dependencies.html":{}}}],["value",{"_index":114,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RemovePayloadInterceptor.html":{}}}],["value.password",{"_index":332,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["variable",{"_index":119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["version",{"_index":422,"title":{},"body":{"properties.html":{}}}],["void",{"_index":301,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yes",{"_index":294,"title":{},"body":{"injectables/LoggerService.html":{}}}],["zone.js",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for checking server health\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hello\n                        \n                    \n                \n            \n            \n                \n                        \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/app/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n                        Test GET route\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Hello response\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n/**\n * Controller for checking server health\n */\n@Controller()\nexport class AppController {\n  /**\n   * Test GET route\n   * @returns {string} Hello response\n   */\n  @Get()\n  hello(): string {\n    return 'Hello API!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            EmployeeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RavenInterceptor, RavenModule } from 'nest-raven';\nimport { HttpException, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nimport { AppController } from './app.controller';\n\nimport { EmployeeModule } from '../employee/employee.module';\nimport { CommonModule } from '../common/common.module';\n\n@Module({\n  imports: [CommonModule, RavenModule, EmployeeModule],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useValue: new RavenInterceptor({\n        filters: [\n          {\n            type: HttpException,\n            filter: (ex: HttpException) => 500 >= ex.getStatus(),\n          },\n        ],\n      }),\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nLoggerService \n\nLoggerService \n\n\n\nCommonModule\n\nCommonModule\n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nConfigService\n\nConfigService\n\nCommonModule -->\n\nConfigService->CommonModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCommonModule -->\n\nLoggerService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { ConfigService } from './services/config.service';\nimport { LoggerService } from './services/logger.service';\nimport { PrismaModule } from 'nestjs-prisma';\n\n@Global()\n@Module({\n  imports: [\n    CqrsModule.forRoot(),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    PrismaModule.forRootAsync({\n      isGlobal: true,\n      useFactory: async (config: ConfigService) => {\n        return {\n          prismaOptions: {\n            datasources: {\n              db: {\n                url: config.getValue('DATABASE_URL'),\n              },\n            },\n          },\n          explicitConnect: true,\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [ConfigService, LoggerService],\n  exports: [ConfigService, LoggerService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/services/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for config\n\n            \n\n            \n                Extends\n            \n            \n                        RootService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/common/services/config.service.ts:12\n                            \n                        \n\n                \n                    \n                            Config constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(value)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/config.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Method for get typed value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ENV name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                Environment variable\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { ENV } from 'shared/interfaces/env';\n\nimport { ConfigService as RootService } from '@nestjs/config';\n\n/**\n * Service for config\n * @constructor\n */\n@Injectable()\nexport class ConfigService extends RootService {\n  /**\n   * Config constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Method for get typed value\n   * @param {string} value ENV name\n   * @returns {any} Environment variable\n   */\n  getValue(value: keyof ENV) {\n    return this.get(value) as T;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeCommand.html":{"url":"classes/CreateEmployeeCommand.html","title":"class - CreateEmployeeCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/create-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Create employee commamnd\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                dto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: Prisma.EmployeeCreateInput)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/create-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                    Prisma.EmployeeCreateInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New employee data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dto\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.EmployeeCreateInput\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/create-employee.ts:14\n                        \n                    \n\n            \n                \n                    New employee data\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Create employee commamnd\n */\nexport class CreateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeCreateInput} dto New employee data\n   */\n  constructor(public readonly dto: Prisma.EmployeeCreateInput) {}\n}\n\n/**\n * Create employee command handler\n */\n@CommandHandler(CreateEmployeeCommand)\nexport class CreateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {CreateEmployeeCommand} dto Execution command\n   * @returns {Employee} Created employee\n   */\n  async execute({ dto }: CreateEmployeeCommand): Promise {\n    return await this.repository.create(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/dtos/create-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Create employee DTO\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsNumber,\n  IsEnum,\n} from 'class-validator';\n\nimport { Rank } from '@prisma/client';\n\n/**\n * Create employee DTO\n */\nexport class CreateEmployeeDto {\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  surname?: string;\n\n  /**\n   * @ignore\n   */\n  @IsNumber()\n  @IsOptional()\n  salary?: number;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  personal_key?: string;\n\n  /**\n   * @ignore\n   */\n  @IsEnum(Rank)\n  @IsOptional()\n  rank?: Rank;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeHandler.html":{"url":"classes/CreateEmployeeHandler.html","title":"class - CreateEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/create-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Create employee command handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/create-employee.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: CreateEmployeeCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/commands/create-employee.ts:35\n                        \n                    \n\n\n            \n                \n                        Command executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateEmployeeCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Created employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Create employee commamnd\n */\nexport class CreateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeCreateInput} dto New employee data\n   */\n  constructor(public readonly dto: Prisma.EmployeeCreateInput) {}\n}\n\n/**\n * Create employee command handler\n */\n@CommandHandler(CreateEmployeeCommand)\nexport class CreateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {CreateEmployeeCommand} dto Execution command\n   * @returns {Employee} Created employee\n   */\n  async execute({ dto }: CreateEmployeeCommand): Promise {\n    return await this.repository.create(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n            \n                Description\n            \n            \n                Employee HTTP controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Create employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Created employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:32\n                        \n                    \n\n\n            \n                \n                        Get employee by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Found employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:74\n                        \n                    \n\n\n            \n                \n                        Delete employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Deleted employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:57\n                        \n                    \n\n\n            \n                \n                        Update employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated employee fields\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Updated employee\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\n\nimport { Employee } from '@prisma/client';\n\nimport { EmployeeService } from './employee.service';\n\nimport { CreateEmployeeDto } from './dtos/create-employee';\nimport { UpdateEmployeeDto } from './dtos/update-employee';\n\n/**\n * Employee HTTP controller\n */\n@Controller('employee')\nexport class EmployeeController {\n  constructor(private employeeService: EmployeeService) {}\n\n  /**\n   * Get employee by id\n   * @param {string} id Employee ID\n   * @returns {Employee} Found employee\n   */\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise {\n    const employee = await this.employeeService.findOneById(id);\n\n    if (!employee) throw new NotFoundException('Employee not found');\n\n    return employee;\n  }\n\n  /**\n   * Create employee\n   * @param {CreateEmployeeDto} dto Employee data\n   * @returns {Employee} Created employee\n   */\n  @Post()\n  async create(@Body() dto: CreateEmployeeDto): Promise {\n    return await this.employeeService.create(dto);\n  }\n\n  /**\n   * Update employee\n   * @param {string} id Employee ID\n   * @param {UpdateEmployeeDto} dto Updated employee fields\n   * @returns {Employee} Updated employee\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() dto: UpdateEmployeeDto\n  ): Promise {\n    const employee = await this.employeeService.update(id, dto);\n\n    if (!employee) throw new NotFoundException('Employee not found');\n\n    return employee;\n  }\n\n  /**\n   * Delete employee\n   * @param {string} id Employee ID\n   * @returns {Employee} Deleted employee\n   */\n  @Delete(':id')\n  async remove(@Param('id') id: string): Promise {\n    return await this.employeeService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nEmployeeRepository\n\nEmployeeRepository\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nEmployeeRepository->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeRepository\n                        \n                        \n                            EmployeeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { EmployeeController } from './employee.controller';\n\nimport { EmployeeRepository } from './employee.repository';\nimport { EmployeeService } from './employee.service';\n\nimport { EmployeeCommands, EmployeeCommandHandlers } from './commands';\nimport { EmployeeQueries, EmployeeQueryHandlers } from './queries';\n\n@Module({\n  controllers: [EmployeeController],\n  providers: [\n    ...EmployeeCommands,\n    ...EmployeeQueries,\n    ...EmployeeCommandHandlers,\n    ...EmployeeQueryHandlers,\n    EmployeeService,\n    EmployeeRepository,\n  ],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeRepository.html":{"url":"injectables/EmployeeRepository.html","title":"injectable - EmployeeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/employee.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Employee repository\n\n            \n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/employee.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Repository constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { PrismaService } from 'nestjs-prisma';\nimport { Injectable } from '@nestjs/common';\nimport { Employee } from '@prisma/client';\n\nimport { BaseRepository } from 'shared/classes/base.repository';\n\n/**\n * Employee repository\n */\n@Injectable()\nexport class EmployeeRepository extends BaseRepository {\n  /**\n   * Repository constructor\n   * @param {PrismaService} prisma Prisma service\n   */\n  constructor(private prisma: PrismaService) {\n    super(prisma.employee);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/employee.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Employee service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/employee.service.ts:16\n                            \n                        \n\n                \n                    \n                            Service constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Command executor\n\n                                                        \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Query executor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: Prisma.EmployeeCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Create method\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        Prisma.EmployeeCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Created employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Method for find employee by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Found employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Method for remove employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Removed employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Method for update employee by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated employee fields\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Updated employee\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { Employee, Prisma } from '@prisma/client';\nimport { Injectable } from '@nestjs/common';\n\nimport { CreateEmployeeCommand } from './commands/create-employee';\nimport { UpdateEmployeeCommand } from './commands/update-employee';\nimport { RemoveEmployeeCommand } from './commands/remove-employee';\n\nimport { GetEmployeeQuery } from './queries/get-employee';\n\nimport { UpdateEmployeeDto } from './dtos/update-employee';\n/**\n * Employee service\n */\n@Injectable()\nexport class EmployeeService {\n  /**\n   * Service constructor\n   * @param {CommandBus} commandBus Command executor\n   * @param {QueryBus} queryBus Query executor\n   */\n  constructor(private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  /**\n   * Create method\n   * @param {Prisma.EmployeeCreateInput} dto Employee data\n   * @returns {Employee} Created employee\n   */\n  async create(dto: Prisma.EmployeeCreateInput): Promise {\n    return await this.commandBus.execute(\n      new CreateEmployeeCommand(dto)\n    );\n  }\n\n  /**\n   * Method for find employee by id\n   * @param {string} id Employee ID\n   * @returns {Employee | null} Found employee\n   */\n  async findOneById(id: string): Promise {\n    return await this.queryBus.execute(\n      new GetEmployeeQuery({ id })\n    );\n  }\n\n  /**\n   * Method for update employee by id\n   * @param {string} id Employee ID\n   * @param {UpdateEmployeeDto} dto Updated employee fields\n   * @returns {Employee | null} Updated employee\n   */\n  async update(id: string, dto: UpdateEmployeeDto): Promise {\n    return await this.commandBus.execute(new UpdateEmployeeCommand(id, dto));\n  }\n\n  /**\n   * Method for remove employee\n   * @param {string} id Employee ID\n   * @returns {Employee | null} Removed employee\n   */\n  async remove(id: string): Promise {\n    return await this.commandBus.execute(new RemoveEmployeeCommand(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEmployeeHandler.html":{"url":"classes/GetEmployeeHandler.html","title":"class - GetEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/queries/get-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Get employee query handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/queries/get-employee.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: GetEmployeeQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/queries/get-employee.ts:33\n                        \n                    \n\n\n            \n                \n                        Query executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            GetEmployeeQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Found employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Get employee query\n */\nexport class GetEmployeeQuery {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeWhereUniqueInput} dto Employee unique fields\n   */\n  constructor(public readonly dto: Prisma.EmployeeWhereUniqueInput) {}\n}\n\n/**\n * Get employee query handler\n */\n@QueryHandler(GetEmployeeQuery)\nexport class GetEmployeeHandler implements IQueryHandler {\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Query executor\n   * @param {GetEmployeeQuery} dto Execution query\n   * @returns {Employee | null} Found employee\n   */\n  async execute({ dto }: GetEmployeeQuery): Promise {\n    return this.repository.findOne(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEmployeeQuery.html":{"url":"classes/GetEmployeeQuery.html","title":"class - GetEmployeeQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEmployeeQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/queries/get-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Get employee query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                dto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: Prisma.EmployeeWhereUniqueInput)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/queries/get-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                    Prisma.EmployeeWhereUniqueInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Employee unique fields\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dto\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.EmployeeWhereUniqueInput\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/queries/get-employee.ts:14\n                        \n                    \n\n            \n                \n                    Employee unique fields\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Get employee query\n */\nexport class GetEmployeeQuery {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeWhereUniqueInput} dto Employee unique fields\n   */\n  constructor(public readonly dto: Prisma.EmployeeWhereUniqueInput) {}\n}\n\n/**\n * Get employee query handler\n */\n@QueryHandler(GetEmployeeQuery)\nexport class GetEmployeeHandler implements IQueryHandler {\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Query executor\n   * @param {GetEmployeeQuery} dto Execution query\n   * @returns {Employee | null} Found employee\n   */\n  async execute({ dto }: GetEmployeeQuery): Promise {\n    return this.repository.findOne(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/services/logger.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for logging based on native logger\n\n            \n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ctx\n                            \n                            \n                                setCtx\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ctx?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/common/services/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            Logger constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Logging context\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ctx\n                        \n                    \n                \n            \n            \n                \nctx()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/logger.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Get context\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Current context\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtx\n                        \n                    \n                \n            \n            \n                \nsetCtx(ctx: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/logger.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Set context\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    New context\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable } from '@nestjs/common';\n\n/**\n * Service for logging based on native logger\n * @constructor\n */\n@Injectable()\nexport class LoggerService extends ConsoleLogger {\n  /**\n   * Logger constructor\n   * @param {string} ctx Logging context\n   */\n  constructor(ctx?: string) {\n    super(ctx || 'Comduty');\n  }\n\n  /**\n   * Get context\n   * @returns {string} Current context\n   */\n  ctx(): string {\n    return this.context;\n  }\n\n  /**\n   * Set context\n   * @param {string} ctx New context\n   */\n  setCtx(ctx: string) {\n    this.setContext(ctx);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveEmployeeCommand.html":{"url":"classes/RemoveEmployeeCommand.html","title":"class - RemoveEmployeeCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveEmployeeCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/remove-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Remove employee command\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/remove-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of removed employee\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/remove-employee.ts:14\n                        \n                    \n\n            \n                \n                    ID of removed employee\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Remove employee command\n */\nexport class RemoveEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id ID of removed employee\n   */\n  constructor(public readonly id: string) {}\n}\n\n/**\n * Remove employee command handler\n */\n@CommandHandler(RemoveEmployeeCommand)\nexport class RemoveEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {RemoveEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Removed employee\n   */\n  async execute({ id }: RemoveEmployeeCommand): Promise {\n    return await this.repository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveEmployeeHandler.html":{"url":"classes/RemoveEmployeeHandler.html","title":"class - RemoveEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/remove-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Remove employee command handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/remove-employee.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: RemoveEmployeeCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/commands/remove-employee.ts:35\n                        \n                    \n\n\n            \n                \n                        Command executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RemoveEmployeeCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Removed employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Remove employee command\n */\nexport class RemoveEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id ID of removed employee\n   */\n  constructor(public readonly id: string) {}\n}\n\n/**\n * Remove employee command handler\n */\n@CommandHandler(RemoveEmployeeCommand)\nexport class RemoveEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {RemoveEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Removed employee\n   */\n  async execute({ id }: RemoveEmployeeCommand): Promise {\n    return await this.repository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemovePayloadInterceptor.html":{"url":"injectables/RemovePayloadInterceptor.html","title":"injectable - RemovePayloadInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RemovePayloadInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/interceptors/remove-payload.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for excluding private information\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_: any, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/interceptors/remove-payload.ts:15\n                        \n                    \n\n\n            \n                \n                        Interseptor`s executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Context\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Call handler\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Next stream\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable, map } from 'rxjs';\n\n/**\n * Interceptor for excluding private information\n */\n@Injectable()\nexport class RemovePayloadInterceptor implements NestInterceptor {\n  /**\n   * Interseptor`s executor\n   * @param {any} _ Context\n   * @param {CallHandler} next Call handler\n   * @returns {Observable} Next stream\n   */\n  intercept(_: any, next: CallHandler): Observable {\n    return next.handle().pipe(\n      map((value) => {\n        if (value !== null && value.password) value.password = undefined;\n        return value;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeCommand.html":{"url":"classes/UpdateEmployeeCommand.html","title":"class - UpdateEmployeeCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/update-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Update employee command\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                dto\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, dto: Prisma.EmployeeUpdateInput)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/update-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Employee ID\n\n                                                        \n                                                \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                    Prisma.EmployeeUpdateInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Employee fields for update\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dto\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.EmployeeUpdateInput\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/update-employee.ts:17\n                        \n                    \n\n            \n                \n                    Employee fields for update\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/update-employee.ts:16\n                        \n                    \n\n            \n                \n                    Employee ID\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Update employee command\n */\nexport class UpdateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id Employee ID\n   * @param {Prisma.EmployeeUpdateInput} dto Employee fields for update\n   */\n  constructor(\n    public readonly id: string,\n    public readonly dto: Prisma.EmployeeUpdateInput\n  ) {}\n}\n\n/**\n * Update employee command handler\n */\n@CommandHandler(UpdateEmployeeCommand)\nexport class UpdateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {UpdateEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Updated employee\n   */\n  async execute({ id, dto }: UpdateEmployeeCommand): Promise {\n    return await this.repository.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/dtos/update-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Update employee DTO\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsNumber,\n  IsEnum,\n} from 'class-validator';\n\nimport { Rank } from '@prisma/client';\n\n/**\n * Update employee DTO\n */\nexport class UpdateEmployeeDto {\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  name?: string;\n  /**\n   * @ignore\n   */\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  surname?: string;\n\n  /**\n   * @ignore\n   */\n  @IsNumber()\n  @IsOptional()\n  salary?: number;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  personal_key?: string;\n\n  /**\n   * @ignore\n   */\n  @IsEnum(Rank)\n  @IsOptional()\n  rank?: Rank;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  login?: string;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeHandler.html":{"url":"classes/UpdateEmployeeHandler.html","title":"class - UpdateEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/update-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Update employee command handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/update-employee.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: UpdateEmployeeCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/commands/update-employee.ts:39\n                        \n                    \n\n\n            \n                \n                        Command executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UpdateEmployeeCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Updated employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Update employee command\n */\nexport class UpdateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id Employee ID\n   * @param {Prisma.EmployeeUpdateInput} dto Employee fields for update\n   */\n  constructor(\n    public readonly id: string,\n    public readonly dto: Prisma.EmployeeUpdateInput\n  ) {}\n}\n\n/**\n * Update employee command handler\n */\n@CommandHandler(UpdateEmployeeCommand)\nexport class UpdateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {UpdateEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Updated employee\n   */\n  async execute({ id, dto }: UpdateEmployeeCommand): Promise {\n    return await this.repository.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/common/interceptors/remove-payload.ts\n            \n            injectable\n            RemovePayloadInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/common/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/create-employee.ts\n            \n            class\n            CreateEmployeeCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/create-employee.ts\n            \n            class\n            CreateEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/remove-employee.ts\n            \n            class\n            RemoveEmployeeCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/remove-employee.ts\n            \n            class\n            RemoveEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/update-employee.ts\n            \n            class\n            UpdateEmployeeCommand\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/update-employee.ts\n            \n            class\n            UpdateEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/dtos/create-employee.ts\n            \n            class\n            CreateEmployeeDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/employee/dtos/update-employee.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/employee/employee.repository.ts\n            \n            injectable\n            EmployeeRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/employee/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/api/src/employee/queries/get-employee.ts\n            \n            class\n            GetEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/queries/get-employee.ts\n            \n            class\n            GetEmployeeQuery\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~17.0.0\n        \n            @angular/common : ~17.0.0\n        \n            @angular/compiler : ~17.0.0\n        \n            @angular/core : ~17.0.0\n        \n            @angular/forms : ~17.0.0\n        \n            @angular/platform-browser : ~17.0.0\n        \n            @angular/platform-browser-dynamic : ~17.0.0\n        \n            @angular/router : ~17.0.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @prisma/client : ^5.7.1\n        \n            @sentry/node : ^7.92.0\n        \n            @sentry/profiling-node : ^1.3.3\n        \n            axios : ^1.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            express-fingerprint : ^1.2.2\n        \n            nest-raven : ^10.0.1\n        \n            nestjs-prisma : ^0.22.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nComduty\nDuty system\n\n  ER model\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nCommonModule -->\n\nConfigService->CommonModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCommonModule -->\n\nLoggerService->CommonModule\n\n\n\n\n\nEmployeeRepository\n\nEmployeeRepository\n\nEmployeeModule -->\n\nEmployeeRepository->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
