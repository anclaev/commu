var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.127,1,1.127]],["body/controllers/AppController.html",[0,1.642,1,1.642,2,1.968,3,1.027,4,1.027,5,0.828,6,1.968,7,1.027,8,1.642,9,4.066,10,2.578,11,0.08,12,1.567,13,2.578,14,1.567,15,1.968,16,1.027,17,0.828,18,1.027,19,0.828,20,1.267,21,2.578,22,0.061,23,0.061]],["title/modules/AppModule.html",[24,0.914,25,1.127]],["body/modules/AppModule.html",[1,1.521,2,2.012,3,0.727,4,0.727,5,0.585,11,0.081,16,1.433,17,0.585,18,0.727,19,0.585,22,0.048,23,0.048,24,1.233,25,1.841,26,0.727,27,0.727,28,1.108,29,1.108,30,0.727,31,1.602,32,1.108,33,1.392,34,1.392,35,1.493,36,1.602,37,1.108,38,1.108,39,1.824,40,2.012,41,2.636,42,2.636,43,1.392,44,1.392,45,3.095,46,2.636,47,1.392,48,1.824,49,1.824,50,1.824,51,1.824,52,1.108,53,1.824,54,0.896,55,1.824,56,1.824,57,1.824,58,1.824]],["title/modules/CommonModule.html",[24,0.914,35,0.914]],["body/modules/CommonModule.html",[3,0.609,4,0.609,5,0.491,11,0.081,16,1.4,17,0.491,18,0.609,19,0.491,20,0.751,22,0.042,23,0.042,24,1.111,26,0.609,27,0.609,28,0.929,29,0.929,30,0.609,31,1.695,32,1.695,35,1.563,36,1.405,37,0.929,38,0.929,40,1.167,59,1.167,60,1.167,61,1.167,62,1.645,63,1.61,64,1.528,65,2.313,66,1.528,67,0.929,68,1.528,69,1.167,70,1.528,71,1.528,72,1.528,73,1.167,74,0.929,75,1.528,76,1.528,77,2.313,78,2.13,79,1.528,80,1.528,81,1.167,82,1.167,83,1.528,84,1.528,85,1.528,86,1.528,87,1.528,88,1.528,89,1.528]],["title/injectables/ConfigService.html",[62,0.914,90,0.914]],["body/injectables/ConfigService.html",[3,0.839,4,0.839,5,0.676,7,0.839,8,1.434,11,0.08,12,1.773,14,1.28,16,1.334,17,0.676,18,0.839,19,0.676,20,1.035,22,0.053,23,0.053,54,1.035,62,1.334,67,1.28,90,1.162,91,1.28,92,1.608,93,2.228,94,3.349,95,2.918,96,2.557,97,2.106,98,2.918,99,2.106,100,2.228,101,3.349,102,1.608,103,1.608,104,1.608,105,2.918,106,2.106,107,2.106,108,2.106,109,2.106]],["title/injectables/LoggerService.html",[63,0.914,90,0.914]],["body/injectables/LoggerService.html",[3,0.793,4,0.793,5,0.639,7,0.793,8,1.379,11,0.08,12,1.975,14,1.706,15,2.947,16,0.793,17,0.639,18,0.793,19,0.639,20,0.979,22,0.051,23,0.051,54,1.379,63,1.118,90,1.118,91,1.21,93,2.143,96,1.521,100,2.143,102,2.143,103,2.143,110,1.521,111,3.25,112,3.86,113,2.807,114,2.807,115,1.992,116,1.992,117,1.992,118,2.807,119,1.992,120,1.992,121,1.992,122,1.521,123,1.992,124,1.992]],["title/coverage.html",[125,2.362]],["body/coverage.html",[0,1.294,1,1.294,5,0.845,6,2.011,11,0.076,22,0.062,23,0.062,30,1.049,52,1.6,54,1.294,62,1.049,63,1.049,90,1.35,92,2.011,110,2.011,125,2.011,126,2.634,127,2.634,128,2.634,129,3.956,130,2.634,131,2.634,132,2.634,133,2.011,134,2.634,135,2.634,136,2.634,137,2.634]],["title/dependencies.html",[27,1.095,138,1.476]],["body/dependencies.html",[11,0.082,17,0.545,19,0.803,22,0.045,23,0.045,27,0.676,43,1.296,44,1.296,47,1.296,67,1.032,69,1.296,73,1.296,74,1.032,139,1.698,140,3.879,141,1.698,142,1.698,143,1.698,144,1.698,145,2.501,146,1.91,147,1.698,148,1.698,149,2.97,150,1.698,151,1.698,152,1.698,153,1.698,154,1.698,155,1.698,156,1.698,157,2.501,158,1.698,159,1.698,160,1.698,161,1.698,162,1.698,163,1.698,164,1.698,165,1.698,166,1.698,167,1.698,168,1.698,169,1.698,170,1.698,171,1.698,172,2.501,173,1.698,174,1.698,175,1.698,176,1.698,177,1.698,178,1.698,179,1.698,180,2.501,181,1.698,182,1.698,183,1.698,184,1.698,185,1.698,186,1.698,187,1.698,188,1.698,189,1.698,190,1.698,191,1.698]],["title/index.html",[7,0.77,192,1.933,193,1.933]],["body/index.html",[11,0.071,22,0.071,23,0.071,122,2.561,194,3.354,195,3.354]],["title/modules.html",[26,1.232]],["body/modules.html",[11,0.068,22,0.068,23,0.068,25,1.536,26,1.245,35,1.245,146,2.879,196,3.771,197,3.771,198,3.771]],["title/overview.html",[199,2.362]],["body/overview.html",[0,1.118,11,0.075,22,0.056,23,0.056,24,0.906,25,1.835,26,0.906,27,0.906,28,1.383,29,1.383,30,0.906,31,1.383,32,1.383,33,1.737,34,1.737,35,1.688,36,1.87,37,1.383,38,1.383,59,1.737,60,1.737,61,1.737,62,1.638,63,1.638,91,1.383,199,1.737,200,3.077,201,2.275]],["title/properties.html",[138,1.476,202,2.098]],["body/properties.html",[11,0.077,22,0.07,23,0.07,202,2.471,203,3.236,204,3.236,205,3.236,206,3.236]],["title/miscellaneous/variables.html",[207,1.476,208,2.098]],["body/miscellaneous/variables.html",[7,0.609,8,0.751,11,0.082,22,0.042,23,0.042,30,0.921,52,2.031,74,1.405,78,2.13,81,1.167,82,1.167,104,1.167,133,1.167,207,1.167,208,1.167,209,1.528,210,1.528,211,3.987,212,2.313,213,2.313,214,1.528,215,1.528,216,1.528,217,2.313,218,1.528,219,1.528,220,1.528,221,1.528,222,1.528,223,2.313,224,1.528,225,1.528,226,1.528,227,2.313,228,1.528,229,1.528,230,1.528,231,1.528,232,2.313,233,1.528,234,1.528,235,1.528,236,1.528,237,1.528,238,1.528,239,1.528,240,1.528,241,1.528,242,1.528,243,1.528,244,1.528,245,1.528,246,1.528,247,1.528,248,1.528,249,1.528,250,1.528,251,1.528,252,1.528,253,1.528,254,1.528,255,2.313,256,1.528,257,1.528,258,1.528,259,1.528,260,1.528,261,1.528,262,1.528,263,1.528,264,1.528,265,1.528,266,1.528,267,1.528,268,1.528,269,1.528,270,1.528,271,1.528]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":129,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":204,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":135,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":130,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":131,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":132,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":201,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.0.0",{"_index":140,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":200,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["3001",{"_index":231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.0",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["7.92.0",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["allowedheaders",{"_index":240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedorigins",{"_index":223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":141,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":142,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":143,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":144,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":145,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.enablecors",{"_index":238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(configservice",{"_index":219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(loggerservice",{"_index":221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(prismaservice",{"_index":222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.gethttpadapter",{"_index":216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.listen(port).finally",{"_index":267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(cookieparser(cookiesecret",{"_index":265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalfilters(new",{"_index":263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalpipes",{"_index":235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_interceptor",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":25,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../main.ts",{"_index":209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/app.controller.ts:6",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/common/common.module.ts",{"_index":64,"title":{},"body":{"modules/CommonModule.html":{}}}],["apps/api/src/common/services/config.service.ts",{"_index":92,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/common/services/config.service.ts:12",{"_index":99,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apps/api/src/common/services/config.service.ts:7",{"_index":97,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apps/api/src/common/services/logger.service.ts",{"_index":110,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["apps/api/src/common/services/logger.service.ts:13",{"_index":119,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/common/services/logger.service.ts:4",{"_index":115,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/common/services/logger.service.ts:9",{"_index":117,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/main.ts",{"_index":133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":81,"title":{},"body":{"modules/CommonModule.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["axios",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["bcrypt",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["bootstrap",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":198,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":146,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["capture",{"_index":256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"dependencies.html":{}}}],["client",{"_index":252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":59,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":61,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":60,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["comduty",{"_index":122,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["common/common.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":35,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":82,"title":{},"body":{"modules/CommonModule.html":{},"miscellaneous/variables.html":{}}}],["config.getvalue('allowed_origins",{"_index":224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.getvalue('cookie_secret",{"_index":226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.getvalue('database_url",{"_index":87,"title":{},"body":{"modules/CommonModule.html":{}}}],["config.getvalue('sentry_api_dsn",{"_index":228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":66,"title":{},"body":{"modules/CommonModule.html":{}}}],["configmodule.forroot",{"_index":76,"title":{},"body":{"modules/CommonModule.html":{}}}],["configservice",{"_index":62,"title":{"injectables/ConfigService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["consolelogger",{"_index":111,"title":{},"body":{"injectables/LoggerService.html":{}}}],["const",{"_index":211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":96,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["constructor(ctx",{"_index":114,"title":{},"body":{"injectables/LoggerService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["cookie",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["cookiesecret",{"_index":225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":125,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrsmodule",{"_index":68,"title":{},"body":{"modules/CommonModule.html":{}}}],["cqrsmodule.forroot",{"_index":75,"title":{},"body":{"modules/CommonModule.html":{}}}],["credentials",{"_index":241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":112,"title":{},"body":{"injectables/LoggerService.html":{}}}],["datasources",{"_index":84,"title":{},"body":{"modules/CommonModule.html":{}}}],["db",{"_index":85,"title":{},"body":{"modules/CommonModule.html":{}}}],["declarations",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["dependencies",{"_index":27,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"dependencies.html":{},"overview.html":{}}}],["development",{"_index":245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":126,"title":{},"body":{"coverage.html":{}}}],["dsn",{"_index":227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duty",{"_index":194,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["env",{"_index":105,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment",{"_index":243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ex",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["ex.getstatus",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["explicitconnect",{"_index":88,"title":{},"body":{"modules/CommonModule.html":{}}}],["export",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["exports",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["express",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":93,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["filter",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["filters",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["fingerprint",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["getting",{"_index":192,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":95,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getvalue(value",{"_index":98,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":65,"title":{},"body":{"modules/CommonModule.html":{}}}],["hello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["host",{"_index":232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}:${port",{"_index":271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpadapter",{"_index":215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpadapter.getinstance",{"_index":218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["identifier",{"_index":127,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["inject",{"_index":89,"title":{},"body":{"modules/CommonModule.html":{}}}],["injectable",{"_index":90,"title":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["injectables",{"_index":91,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["instance",{"_index":217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance.use(fingerprint",{"_index":266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance.use(sentry.handlers.errorhandler",{"_index":262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance.use(sentry.handlers.requesthandler",{"_index":260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance.use(sentry.handlers.tracinghandler",{"_index":261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integrations",{"_index":247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":77,"title":{},"body":{"modules/CommonModule.html":{}}}],["jwt",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["keyof",{"_index":108,"title":{},"body":{"injectables/ConfigService.html":{}}}],["legend",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["license",{"_index":205,"title":{},"body":{"properties.html":{}}}],["localhost",{"_index":234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log",{"_index":268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":63,"title":{"injectables/LoggerService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":207,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":206,"title":{},"body":{"properties.html":{}}}],["module",{"_index":24,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["modules",{"_index":26,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":102,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["nest",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestfactory.create(appmodule",{"_index":214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs",{"_index":73,"title":{},"body":{"modules/CommonModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":67,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":69,"title":{},"body":{"modules/CommonModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":152,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":103,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["origin",{"_index":239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["overview",{"_index":199,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":138,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":100,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["parser",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma",{"_index":74,"title":{},"body":{"modules/CommonModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["prismaclientexceptionfilter(httpadapter",{"_index":264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":72,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismamodule.forrootasync",{"_index":79,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismaoptions",{"_index":83,"title":{},"body":{"modules/CommonModule.html":{}}}],["process.env.api_host",{"_index":233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_port",{"_index":230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilessamplerate",{"_index":259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilingintegration",{"_index":253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":202,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provide",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["raven",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["raveninterceptor",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["ravenmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["results",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["rootservice",{"_index":94,"title":{},"body":{"injectables/ConfigService.html":{}}}],["running",{"_index":270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["sentry.init",{"_index":242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.integrations.express",{"_index":250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.integrations.http",{"_index":248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.integrations.prisma",{"_index":251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/node",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["sentry/profiling",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["servername",{"_index":246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/config.service",{"_index":70,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/logger.service",{"_index":71,"title":{},"body":{"modules/CommonModule.html":{}}}],["setctx",{"_index":113,"title":{},"body":{"injectables/LoggerService.html":{}}}],["setctx(ctx",{"_index":118,"title":{},"body":{"injectables/LoggerService.html":{}}}],["shared/interfaces",{"_index":106,"title":{},"body":{"injectables/ConfigService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{}}}],["started",{"_index":193,"title":{"index.html":{}},"body":{}}],["statements",{"_index":128,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/LoggerService.html":{}}}],["super",{"_index":107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["super(ctx",{"_index":121,"title":{},"body":{"injectables/LoggerService.html":{}}}],["support",{"_index":196,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":197,"title":{},"body":{"modules.html":{}}}],["system",{"_index":195,"title":{},"body":{"index.html":{}}}],["t",{"_index":101,"title":{},"body":{"injectables/ConfigService.html":{}}}],["table",{"_index":137,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":136,"title":{},"body":{"coverage.html":{}}}],["this.context",{"_index":123,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.get(value",{"_index":109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.setcontext(ctx",{"_index":124,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tracessamplerate",{"_index":254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tracing",{"_index":249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transactions",{"_index":258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":78,"title":{},"body":{"modules/CommonModule.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["url",{"_index":86,"title":{},"body":{"modules/CommonModule.html":{}}}],["usefactory",{"_index":80,"title":{},"body":{"modules/CommonModule.html":{}}}],["usevalue",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":104,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":134,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":208,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":203,"title":{},"body":{"properties.html":{}}}],["void",{"_index":120,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yes",{"_index":116,"title":{},"body":{"injectables/LoggerService.html":{}}}],["zone.js",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hello\n                        \n                    \n                \n            \n            \n                \n                        \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/app/app.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  hello() {\n    return 'Hello API!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RavenInterceptor, RavenModule } from 'nest-raven';\nimport { HttpException, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nimport { CommonModule } from '../common/common.module';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [CommonModule, RavenModule],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useValue: new RavenInterceptor({\n        filters: [\n          {\n            type: HttpException,\n            filter: (ex: HttpException) => 500 >= ex.getStatus(),\n          },\n        ],\n      }),\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nLoggerService \n\nLoggerService \n\n\n\nCommonModule\n\nCommonModule\n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nConfigService\n\nConfigService\n\nCommonModule -->\n\nConfigService->CommonModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCommonModule -->\n\nLoggerService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { ConfigService } from './services/config.service';\nimport { LoggerService } from './services/logger.service';\nimport { PrismaModule } from 'nestjs-prisma';\n\n@Global()\n@Module({\n  imports: [\n    CqrsModule.forRoot(),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    PrismaModule.forRootAsync({\n      isGlobal: true,\n      useFactory: async (config: ConfigService) => {\n        return {\n          prismaOptions: {\n            datasources: {\n              db: {\n                url: config.getValue('DATABASE_URL'),\n              },\n            },\n          },\n          explicitConnect: true,\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [ConfigService, LoggerService],\n  exports: [ConfigService, LoggerService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/services/config.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RootService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/common/services/config.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(value)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/config.service.ts:12\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ENV } from 'shared/interfaces';\n\nimport { ConfigService as RootService } from '@nestjs/config';\n\n@Injectable()\nexport class ConfigService extends RootService {\n  constructor() {\n    super();\n  }\n\n  getValue(value: keyof ENV) {\n    return this.get(value) as T;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/services/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ctx\n                            \n                            \n                                setCtx\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ctx?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/common/services/logger.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ctx\n                        \n                    \n                \n            \n            \n                \nctx()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/logger.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtx\n                        \n                    \n                \n            \n            \n                \nsetCtx(ctx: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/logger.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerService extends ConsoleLogger {\n  constructor(ctx?: string) {\n    super(ctx || 'Comduty');\n  }\n\n  ctx() {\n    return this.context;\n  }\n\n  setCtx(ctx: string) {\n    this.setContext(ctx);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/common/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~17.0.0\n        \n            @angular/common : ~17.0.0\n        \n            @angular/compiler : ~17.0.0\n        \n            @angular/core : ~17.0.0\n        \n            @angular/forms : ~17.0.0\n        \n            @angular/platform-browser : ~17.0.0\n        \n            @angular/platform-browser-dynamic : ~17.0.0\n        \n            @angular/router : ~17.0.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @prisma/client : ^5.7.1\n        \n            @sentry/node : ^7.92.0\n        \n            @sentry/profiling-node : ^1.3.3\n        \n            axios : ^1.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            express-fingerprint : ^1.2.2\n        \n            nest-raven : ^10.0.1\n        \n            nestjs-prisma : ^0.22.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nComduty\nDuty system\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nConfigService\n\nConfigService\n\nCommonModule -->\n\nConfigService->CommonModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCommonModule -->\n\nLoggerService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  const httpAdapter = app.getHttpAdapter();\n  const instance = httpAdapter.getInstance();\n\n  const config = app.get(ConfigService);\n  const logger = app.get(LoggerService);\n  const prisma = app.get(PrismaService);\n\n  const allowedOrigins = config.getValue('ALLOWED_ORIGINS');\n  const cookieSecret = config.getValue('COOKIE_SECRET');\n  const dsn = config.getValue('SENTRY_API_DSN');\n\n  const port = process.env.API_PORT || 3001;\n  const host = process.env.API_HOST || 'localhost';\n\n  app.useGlobalPipes(\n    new ValidationPipe({\n      transform: true,\n    })\n  );\n\n  app.enableCors({\n    origin: allowedOrigins,\n    allowedHeaders: '*',\n    methods: '*',\n    credentials: true,\n  });\n\n  Sentry.init({\n    dsn,\n    environment: process.env.NODE_ENV || 'development',\n    serverName: host,\n    integrations: [\n      new Sentry.Integrations.Http({ tracing: true }),\n      new Sentry.Integrations.Express({ app: instance }),\n      new Sentry.Integrations.Prisma({ client: prisma }),\n      new ProfilingIntegration(),\n    ],\n    tracesSampleRate: 1.0, //  Capture 100% of the transactions\n    profilesSampleRate: 1.0,\n  });\n\n  instance.use(Sentry.Handlers.requestHandler());\n  instance.use(Sentry.Handlers.tracingHandler());\n  instance.use(Sentry.Handlers.errorHandler());\n\n  app.useGlobalFilters(new PrismaClientExceptionFilter(httpAdapter));\n\n  app.use(cookieParser(cookieSecret));\n\n  instance.use(fingerprint());\n\n  await app.listen(port).finally(() => {\n    logger.log(`🚀 Application is running on ${host}:${port}!`);\n  });\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
