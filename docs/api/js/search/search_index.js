var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.627,1,1.833]],["body/controllers/AppController.html",[0,2.94,1,2.853,2,1.985,3,0.344,4,0.344,5,0.284,6,2.969,7,0.541,8,4.603,9,4.603,10,4.603,11,0.692,12,1.504,13,5.734,14,2.969,15,0.039,16,0.692,17,3.606,18,3.789,19,3.789,20,0.99,21,1.497,22,4.603,23,0.344,24,1.065,25,0.344,26,0.195,27,0.692,28,3.606,29,0.03,30,0.03]],["title/modules/AppModule.html",[31,1.31,32,1.833]],["body/modules/AppModule.html",[1,2.909,2,2.284,3,0.293,4,0.293,5,0.243,15,0.04,23,0.515,24,0.909,25,0.293,26,0.167,29,0.027,30,0.027,31,2.08,32,3.479,33,1.517,34,1.517,35,1.909,36,1.909,37,1.909,38,2.572,39,1.909,40,2.535,41,2.535,42,2.973,43,2.973,44,2.572,45,1.909,46,1.909,47,3.079,48,3.416,49,4.149,50,4.149,51,2.535,52,2.535,53,4.693,54,4.149,55,2.535,56,3.079,57,3.079,58,3.079,59,3.079,60,3.079,61,1.365,62,3.079,63,0.525,64,3.079,65,3.079,66,3.079,67,3.079]],["title/modules/CommonModule.html",[31,1.31,42,1.627]],["body/modules/CommonModule.html",[3,0.271,4,0.271,5,0.224,15,0.04,23,0.502,24,0.838,25,0.271,26,0.154,27,0.545,29,0.025,30,0.025,31,1.994,33,1.399,34,1.399,35,1.76,36,1.76,37,1.76,38,2.789,39,2.789,42,3.114,44,2.433,45,1.76,46,1.76,48,2.337,68,2.337,69,2.337,70,2.337,71,3.216,72,3.173,73,2.839,74,3.925,75,2.839,76,2.007,77,2.839,78,0.838,79,2.839,80,2.839,81,2.839,82,2.007,83,0.756,84,2.839,85,2.839,86,3.925,87,4.499,88,2.839,89,2.839,90,0.838,91,2.337,92,2.839,93,2.839,94,2.839,95,2.839,96,2.839,97,2.839,98,2.839]],["title/injectables/ConfigService.html",[71,1.627,99,0.873]],["body/injectables/ConfigService.html",[3,0.292,4,0.292,5,0.242,7,0.621,11,0.589,12,1.353,15,0.04,16,0.795,20,0.89,21,0.906,23,0.446,24,0.906,25,0.292,26,0.166,27,0.589,29,0.027,30,0.027,63,0.523,71,2.579,76,2.169,91,4.129,99,1.222,100,1.512,101,2.527,102,2.566,103,2.926,104,4.685,105,4.14,106,1.437,107,3.069,108,4.14,109,3.069,110,0.89,111,4.685,112,3.408,113,4.14,114,4.129,115,0.798,116,0.66,117,5.015,118,4.14,119,4.14,120,3.069,121,3.069,122,0.66,123,3.069,124,3.069]],["title/classes/CreateEmployeeCommand.html",[26,0.16,125,1.627]],["body/classes/CreateEmployeeCommand.html",[3,0.26,4,0.26,5,0.215,7,0.573,11,0.525,15,0.04,16,0.734,20,0.588,23,0.42,25,0.364,26,0.207,27,0.525,29,0.025,30,0.025,61,1.954,63,0.651,78,0.807,83,0.728,90,0.807,106,1.272,110,0.588,115,0.466,116,0.588,122,0.948,125,2.628,126,0.807,127,3.116,128,0.807,129,2.427,130,1.329,131,3.147,132,1.883,133,2.104,134,1.763,135,1.424,136,2.25,137,3.552,138,1.694,139,2.733,140,1.932,141,1.346,142,1.883,143,0.588,144,1.057,145,0.988,146,1.346,147,1.954,148,0.988,149,2.25,150,1.694,151,0.988,152,1.593,153,1.093,154,0.807,155,0.893,156,1.093,157,1.694,158,1.093,159,0.893,160,1.093,161,2.25]],["title/classes/CreateEmployeeDto.html",[26,0.16,162,1.833]],["body/classes/CreateEmployeeDto.html",[3,0.305,4,0.305,5,0.252,7,0.481,15,0.04,21,1.569,23,0.406,25,0.305,26,0.23,29,0.028,30,0.028,115,0.546,126,0.946,128,0.946,129,2.346,130,1.022,135,1.135,143,0.689,162,2.641,163,2.638,164,4.497,165,4.497,166,4.497,167,3.508,168,2.638,169,2.265,170,3.941,171,4.589,172,2.638,173,2.638,174,2.638,175,2.638,176,2.638,177,2.638,178,2.638]],["title/classes/CreateEmployeeHandler.html",[26,0.16,150,1.833]],["body/classes/CreateEmployeeHandler.html",[3,0.254,4,0.254,5,0.21,7,0.563,11,0.511,12,1.227,15,0.04,16,0.721,20,0.808,23,0.414,25,0.358,26,0.203,27,0.511,29,0.024,30,0.024,61,1.18,63,0.64,78,0.786,83,0.71,90,1.284,106,1.258,110,0.808,115,0.64,116,0.808,122,0.935,125,2.74,126,0.786,127,3.073,128,0.786,129,2.393,130,1.3,131,2.193,134,1.065,135,1.258,137,2.654,139,1.651,141,1.312,142,2.142,143,0.573,144,1.194,145,0.963,146,1.312,147,2.206,148,1.357,149,2.193,150,2.327,151,1.357,152,1.799,153,1.501,154,0.786,155,1.227,156,1.065,157,2.327,158,1.739,159,1.227,160,1.065,161,2.193,179,1.651,180,2.193,181,1.651,182,2.193]],["title/controllers/EmployeeController.html",[0,1.627,183,1.833]],["body/controllers/EmployeeController.html",[0,1.863,2,0.963,3,0.167,4,0.167,5,0.138,7,0.625,11,0.336,12,0.896,14,3.428,15,0.04,16,0.8,18,2.258,19,2.258,20,1.082,21,1.561,23,0.397,24,0.516,25,0.167,26,0.095,27,0.8,29,0.018,30,0.018,61,1.216,63,0.653,90,1.54,110,0.824,115,0.653,116,0.824,122,0.95,129,2.11,130,1.435,135,1.274,139,1.701,143,0.376,154,0.516,157,1.701,159,1.563,160,1.533,162,2.581,183,1.701,184,1.44,185,1.749,186,2.743,187,2.743,188,1.701,189,2.292,190,1.44,191,3.385,192,1.749,193,1.749,194,1.749,195,2.743,196,1.749,197,2.712,198,2.376,199,1.44,200,2.743,201,1.749,202,3.385,203,2.743,204,1.44,205,2.292,206,2.743,207,1.749,208,2.376,209,1.352,210,2.743,211,1.749,212,1.749,213,1.668,214,1.44,215,1.749,216,1.44,217,1.749,218,1.749,219,1.749,220,2.743,221,1.749,222,2.743,223,2.743,224,1.749,225,1.749,226,1.749,227,1.749,228,1.749,229,1.749]],["title/modules/EmployeeModule.html",[31,1.31,43,1.627]],["body/modules/EmployeeModule.html",[2,2.394,3,0.315,4,0.315,5,0.26,15,0.039,23,0.525,24,0.976,25,0.315,26,0.179,29,0.028,30,0.028,31,2.154,33,1.628,34,1.628,35,2.049,36,2.049,37,2.049,38,3.013,39,2.049,43,3.138,44,2.696,45,2.049,46,2.049,144,1.321,145,1.194,183,3.013,213,2.715,214,2.721,230,2.721,231,2.721,232,3.305,233,3.305,234,4.349,235,4.349,236,3.305,237,4.349,238,4.349,239,3.305]],["title/injectables/EmployeeRepository.html",[99,0.873,144,0.709]],["body/injectables/EmployeeRepository.html",[3,0.324,4,0.324,5,0.268,7,0.665,15,0.04,16,0.653,23,0.498,24,1.004,25,0.324,26,0.184,29,0.029,30,0.029,63,0.579,82,2.403,83,1.48,99,1.308,100,1.675,102,2.746,103,3.132,106,1.313,110,0.731,115,0.579,116,0.731,122,0.731,130,1.182,143,0.731,144,1.062,152,1.887,154,1.004,240,2.799,241,4.929,242,3.399,243,5.416,244,3.399,245,3.399,246,3.399]],["title/injectables/EmployeeService.html",[99,0.873,213,1.457]],["body/injectables/EmployeeService.html",[3,0.161,4,0.161,5,0.133,7,0.654,11,0.325,12,0.874,15,0.04,16,0.787,20,1.017,21,1.527,23,0.451,24,0.5,25,0.161,26,0.092,27,0.723,29,0.017,30,0.017,61,1.185,63,0.698,78,0.5,83,0.451,90,1.527,99,0.789,100,0.834,102,2.334,106,0.883,110,0.882,112,3.893,115,0.698,116,0.882,122,0.981,125,0.932,129,2.072,130,1.416,135,1.216,137,2.661,139,1.657,143,0.364,147,1.185,154,0.5,155,1.23,157,1.657,159,1.545,160,1.505,188,2.334,189,2.072,190,2.201,197,2.696,198,1.657,199,2.201,204,2.201,205,2.256,208,2.334,209,1.317,213,1.317,216,1.393,247,1.393,248,2.674,249,1.693,250,4.729,251,4.868,252,1.693,253,1.89,254,1.693,255,2.674,256,1.693,257,2.674,258,1.693,259,1.89,260,1.693,261,1.693,262,0.932,263,1.693,264,0.932,265,1.693,266,1.472,267,1.693,268,1.393,269,1.693,270,1.693,271,1.325,272,1.693,273,2.674,274,1.693,275,1.693]],["title/classes/GetEmployeeHandler.html",[26,0.16,276,1.833]],["body/classes/GetEmployeeHandler.html",[3,0.255,4,0.255,5,0.211,7,0.565,11,0.514,12,1.232,15,0.04,16,0.724,20,0.811,23,0.416,25,0.359,26,0.204,27,0.514,29,0.024,30,0.024,63,0.642,78,0.791,83,0.714,90,1.288,106,1.261,110,0.811,115,0.642,116,0.811,122,0.938,126,0.791,128,0.791,130,1.301,134,1.071,135,1.261,143,0.576,144,1.196,145,0.968,146,1.32,148,1.362,151,1.362,152,1.803,153,1.507,154,0.791,155,1.232,156,1.071,158,1.744,159,1.232,179,1.66,181,1.66,198,2.337,209,1.32,253,3.657,266,2.746,271,1.071,276,2.337,277,3.083,278,3.591,279,2.679,280,2.679,281,2.205,282,3.103,283,2.205,284,2.205,285,2.205]],["title/classes/GetEmployeeQuery.html",[26,0.16,266,1.627]],["body/classes/GetEmployeeQuery.html",[3,0.262,4,0.262,5,0.217,7,0.576,11,0.528,15,0.04,16,0.737,20,0.591,23,0.421,25,0.366,26,0.208,27,0.528,29,0.025,30,0.025,63,0.654,78,0.812,83,0.732,90,0.812,106,1.275,110,0.591,115,0.468,116,0.591,122,0.951,126,0.812,128,0.812,130,1.331,132,1.891,133,2.113,134,1.768,135,1.427,136,2.263,138,1.704,140,1.943,143,0.591,144,1.061,145,0.993,146,1.354,148,0.993,151,0.993,152,1.598,153,1.099,154,0.812,155,0.898,156,1.099,158,1.099,159,0.898,198,1.704,209,2.179,253,3.56,266,2.635,271,1.099,276,1.704,277,3.126,278,3.16,281,2.263,282,4.146,283,3.641,284,2.263,285,2.263]],["title/injectables/LoggerService.html",[72,1.627,99,0.873]],["body/injectables/LoggerService.html",[3,0.266,4,0.266,5,0.22,7,0.669,11,0.536,12,1.267,15,0.04,16,0.856,20,0.959,21,1.682,23,0.266,24,0.824,25,0.266,26,0.151,27,0.536,29,0.025,30,0.025,61,1.718,63,0.661,72,2.134,99,1.145,100,1.374,102,2.404,103,2.741,106,1.284,110,0.834,115,0.661,116,0.834,122,0.834,286,2.296,287,4.817,288,3.877,289,3.877,290,4.817,291,4.457,292,5.482,293,3.877,294,3.877,295,2.789,296,2.789,297,4.641,298,2.789,299,3.877,300,3.877,301,2.789,302,3.877,303,2.789,304,2.789,305,2.296,306,2.789,307,2.789]],["title/classes/RemoveEmployeeCommand.html",[26,0.16,264,1.627]],["body/classes/RemoveEmployeeCommand.html",[3,0.259,4,0.259,5,0.214,7,0.571,11,0.522,15,0.04,16,0.731,20,0.584,21,1.481,23,0.419,25,0.363,26,0.206,27,0.522,29,0.025,30,0.025,63,0.649,78,0.802,83,0.724,90,0.802,106,1.269,110,0.584,115,0.463,116,0.584,122,0.945,126,0.802,128,0.802,130,1.327,132,1.876,133,2.096,134,1.757,135,0.724,138,1.684,140,1.92,141,1.339,142,1.876,143,0.584,144,1.054,145,0.982,146,1.339,147,2.222,148,0.982,151,0.982,152,1.588,153,1.086,154,0.802,155,0.888,156,1.086,158,1.086,159,0.888,160,1.086,188,2.725,197,2.727,259,3.367,264,2.622,271,1.086,308,3.107,309,2.237,310,2.237,311,1.684,312,2.237]],["title/classes/RemoveEmployeeHandler.html",[26,0.16,311,1.833]],["body/classes/RemoveEmployeeHandler.html",[3,0.252,4,0.252,5,0.209,7,0.561,11,0.509,12,1.222,15,0.04,16,0.718,20,0.804,21,1.104,23,0.413,25,0.356,26,0.202,27,0.509,29,0.024,30,0.024,63,0.637,78,0.782,83,0.706,90,1.28,106,1.255,110,0.804,115,0.637,116,0.804,122,0.932,126,0.782,128,0.782,130,1.298,134,1.059,135,0.706,141,1.305,142,2.136,143,0.57,144,1.191,145,0.957,146,1.305,147,2.285,148,1.351,151,1.351,152,1.795,153,1.495,154,0.782,155,1.222,156,1.059,158,1.733,159,1.222,160,1.059,179,1.642,180,2.18,181,1.642,182,2.18,188,2.687,197,2.32,259,3.064,264,2.734,271,1.059,308,3.064,310,2.18,311,2.318,312,2.18]],["title/injectables/RemovePayloadInterceptor.html",[99,0.873,313,2.09]],["body/injectables/RemovePayloadInterceptor.html",[3,0.289,4,0.289,5,0.239,7,0.616,11,0.582,12,1.341,15,0.04,16,0.582,20,0.883,23,0.391,24,0.895,25,0.289,26,0.164,27,0.788,29,0.027,30,0.027,63,0.516,99,1.212,100,1.493,110,0.652,114,3.379,115,0.516,116,0.652,122,0.883,148,1.483,151,1.095,155,1.341,268,3.379,271,1.212,297,3.379,313,2.901,314,3.379,315,2.494,316,4.104,317,4.104,318,4.104,319,4.104,320,4.104,321,5.375,322,5.213,323,3.03,324,4.104,325,4.104,326,4.104,327,4.988,328,4.104,329,4.104,330,3.03,331,2.494,332,3.03,333,3.03,334,4.104,335,3.03]],["title/classes/UpdateEmployeeCommand.html",[26,0.16,262,1.627]],["body/classes/UpdateEmployeeCommand.html",[3,0.236,4,0.236,5,0.195,7,0.535,11,0.475,15,0.04,16,0.802,20,0.532,21,1.429,23,0.398,25,0.34,26,0.193,27,0.475,29,0.023,30,0.023,63,0.711,78,0.731,83,0.66,90,0.731,106,1.29,110,0.532,115,0.422,116,0.532,122,0.982,126,0.731,128,0.731,130,1.349,132,1.756,133,2.775,134,2.016,135,1.443,138,1.535,141,1.22,142,1.756,143,0.532,144,1.001,145,0.895,147,2.145,148,0.895,151,0.895,152,1.509,153,0.99,154,0.731,155,0.809,156,0.99,158,0.99,159,0.809,160,0.99,189,2.775,197,2.668,208,1.535,209,2.057,262,2.514,271,0.99,309,2.038,336,3.229,337,3.985,338,2.476,339,2.476,340,2.038,341,1.535,342,2.038]],["title/classes/UpdateEmployeeDto.html",[26,0.16,205,1.627]],["body/classes/UpdateEmployeeDto.html",[3,0.303,4,0.303,5,0.251,7,0.477,15,0.04,21,1.565,23,0.404,25,0.303,26,0.229,29,0.027,30,0.027,115,0.542,126,0.94,128,0.94,130,1.017,135,1.13,143,0.685,164,4.488,165,4.488,166,4.654,167,3.492,168,2.62,169,2.25,170,3.928,171,4.582,172,2.62,173,2.62,174,2.62,175,2.62,176,2.62,177,2.62,178,2.62,189,2.335,205,2.335,343,2.62]],["title/classes/UpdateEmployeeHandler.html",[26,0.16,341,1.833]],["body/classes/UpdateEmployeeHandler.html",[3,0.243,4,0.243,5,0.201,7,0.546,11,0.489,12,1.189,15,0.04,16,0.699,20,0.783,21,1.075,23,0.404,25,0.347,26,0.197,27,0.489,29,0.024,30,0.024,63,0.62,78,0.753,83,0.679,90,1.253,106,1.304,110,0.783,115,0.62,116,0.783,122,0.996,126,0.753,128,0.753,130,1.308,133,2.003,134,1.455,135,1.304,141,1.256,142,2.091,143,0.548,144,1.174,145,0.921,147,2.256,148,1.315,151,1.315,152,1.769,153,1.455,154,0.753,155,1.189,156,1.019,158,1.697,159,1.189,160,1.019,179,1.58,181,1.58,189,2.548,197,2.281,208,2.256,209,1.256,262,2.695,271,1.019,336,3,337,2.996,340,2.098,341,2.256,342,2.098,344,2.549,345,2.549]],["title/coverage.html",[346,3.323]],["body/coverage.html",[0,2.216,1,1.826,5,0.232,6,2.425,15,0.039,26,0.308,29,0.026,30,0.026,61,1.305,63,0.502,71,1.621,72,1.621,99,1.524,101,2.425,125,1.621,127,2.845,128,1.683,144,0.706,150,1.826,162,1.826,163,2.425,183,1.826,184,2.425,205,1.621,213,1.451,240,2.425,247,2.425,262,1.621,264,1.621,266,1.621,276,1.826,277,2.845,286,2.425,308,2.845,311,1.826,313,2.082,314,2.425,315,2.425,336,2.845,341,1.826,343,2.425,346,2.425,347,2.945,348,2.945,349,2.945,350,5.953,351,4.587,352,5.554,353,4.026,354,4.026,355,4.026,356,2.945,357,2.945]],["title/dependencies.html",[34,1.752,358,2.032]],["body/dependencies.html",[15,0.04,24,0.903,26,0.223,29,0.027,30,0.027,34,1.507,51,2.518,52,2.518,55,2.518,76,2.162,78,0.903,82,2.162,83,0.815,143,0.658,169,2.162,331,2.518,359,3.059,360,5.603,361,3.059,362,3.059,363,3.059,364,3.059,365,4.131,366,3.401,367,3.059,368,3.059,369,4.677,370,3.059,371,3.059,372,3.059,373,3.059,374,3.059,375,3.059,376,3.059,377,4.131,378,3.059,379,3.059,380,3.059,381,3.059,382,3.059,383,3.059,384,3.059,385,3.059,386,3.059,387,3.059,388,3.059,389,3.059,390,4.131,391,3.059,392,3.059,393,3.059,394,3.059,395,3.059,396,3.059,397,3.059,398,4.131,399,3.059,400,3.059,401,3.059,402,3.059,403,3.059,404,3.059,405,3.059,406,3.059,407,3.059,408,3.059]],["title/index.html",[11,0.474,409,2.468,410,2.468]],["body/index.html",[15,0.035,29,0.035,30,0.035,305,3.81,411,4.629,412,4.629,413,4.629,414,4.629]],["title/modules.html",[33,1.989]],["body/modules.html",[15,0.034,29,0.034,30,0.034,32,2.723,33,2.164,42,2.418,43,2.418,366,4.555,415,5.533,416,5.533,417,5.533]],["title/overview.html",[418,3.323]],["body/overview.html",[2,1.885,15,0.038,29,0.029,30,0.029,31,1.517,32,3.449,33,1.687,34,1.687,35,2.123,36,2.123,37,2.123,38,2.123,39,2.123,40,2.819,41,2.819,42,3.196,43,3.119,44,2.759,45,2.123,46,2.123,68,2.819,69,2.819,70,2.819,71,3.119,72,3.119,100,1.687,126,1.011,144,1.186,213,2.437,230,2.819,231,2.819,418,2.819,419,3.424,420,3.424,421,3.424,422,3.424]],["title/properties.html",[132,1.752,358,2.032]],["body/properties.html",[15,0.037,29,0.034,30,0.034,132,2.258,423,4.584,424,4.584,425,4.584,426,4.584]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.0.0",{"_index":424,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["1.0.0",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":422,"title":{},"body":{"overview.html":{}}}],["10.0.1",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["17.0.0",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":420,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":419,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":421,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["6/6",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["7.92.0",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":325,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["angular/animations",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/api/src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/app.controller.ts:13",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/common/common.module.ts",{"_index":73,"title":{},"body":{"modules/CommonModule.html":{}}}],["apps/api/src/common/interceptors/remove",{"_index":314,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["apps/api/src/common/services/config.service.ts",{"_index":101,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/common/services/config.service.ts:12",{"_index":107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apps/api/src/common/services/config.service.ts:25",{"_index":109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apps/api/src/common/services/logger.service.ts",{"_index":286,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["apps/api/src/common/services/logger.service.ts:21",{"_index":298,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/common/services/logger.service.ts:29",{"_index":301,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/common/services/logger.service.ts:8",{"_index":295,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/api/src/employee/commands/create",{"_index":127,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"coverage.html":{}}}],["apps/api/src/employee/commands/remove",{"_index":308,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"coverage.html":{}}}],["apps/api/src/employee/commands/update",{"_index":336,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["apps/api/src/employee/dtos/create",{"_index":163,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"coverage.html":{}}}],["apps/api/src/employee/dtos/update",{"_index":343,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.controller.ts",{"_index":184,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.controller.ts:31",{"_index":193,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:41",{"_index":196,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:55",{"_index":192,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:66",{"_index":207,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.controller.ts:83",{"_index":201,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apps/api/src/employee/employee.module.ts",{"_index":232,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["apps/api/src/employee/employee.repository.ts",{"_index":240,"title":{},"body":{"injectables/EmployeeRepository.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.repository.ts:11",{"_index":244,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["apps/api/src/employee/employee.service.ts",{"_index":247,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{}}}],["apps/api/src/employee/employee.service.ts:16",{"_index":252,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:29",{"_index":254,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:40",{"_index":256,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:52",{"_index":260,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/employee.service.ts:64",{"_index":258,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["apps/api/src/employee/queries/get",{"_index":277,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"coverage.html":{}}}],["async",{"_index":90,"title":{},"body":{"modules/CommonModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["await",{"_index":160,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["axios",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":288,"title":{},"body":{"injectables/LoggerService.html":{}}}],["baserepository",{"_index":241,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["bcrypt",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":210,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["browse",{"_index":417,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":366,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["call",{"_index":326,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["callhandler",{"_index":322,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["checking",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["class",{"_index":26,"title":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":126,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":68,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":69,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":70,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":230,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":231,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["comduty",{"_index":305,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["commamnd",{"_index":131,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{}}}],["command",{"_index":147,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["commandbus",{"_index":250,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["commandhandler",{"_index":141,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["commandhandler(createemployeecommand",{"_index":149,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{}}}],["commandhandler(removeemployeecommand",{"_index":310,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["commandhandler(updateemployeecommand",{"_index":340,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["commands",{"_index":236,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["commands/create",{"_index":261,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["commands/remove",{"_index":265,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["commands/update",{"_index":263,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["common/common.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":42,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":91,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{}}}],["config.getvalue('database_url",{"_index":96,"title":{},"body":{"modules/CommonModule.html":{}}}],["configmodule",{"_index":75,"title":{},"body":{"modules/CommonModule.html":{}}}],["configmodule.forroot",{"_index":85,"title":{},"body":{"modules/CommonModule.html":{}}}],["configservice",{"_index":71,"title":{"injectables/ConfigService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["consolelogger",{"_index":291,"title":{},"body":{"injectables/LoggerService.html":{}}}],["const",{"_index":220,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["constructor(commandbus",{"_index":249,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["constructor(ctx",{"_index":294,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(dto",{"_index":136,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{}}}],["constructor(id",{"_index":309,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{}}}],["constructor(prisma",{"_index":242,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["constructor(private",{"_index":154,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["constructor(public",{"_index":146,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["constructor(repository",{"_index":179,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["context",{"_index":297,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{}},"body":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["controller('employee",{"_index":217,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["cookie",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":346,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrsmodule",{"_index":77,"title":{},"body":{"modules/CommonModule.html":{}}}],["cqrsmodule.forroot",{"_index":84,"title":{},"body":{"modules/CommonModule.html":{}}}],["create",{"_index":129,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["create(@body",{"_index":224,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["create(dto",{"_index":190,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["created",{"_index":157,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["createemployeecommand",{"_index":125,"title":{"classes/CreateEmployeeCommand.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["createemployeecommand(dto",{"_index":270,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployeedto",{"_index":162,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["createemployeehandler",{"_index":150,"title":{"classes/CreateEmployeeHandler.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"coverage.html":{}}}],["ctx",{"_index":292,"title":{},"body":{"injectables/LoggerService.html":{}}}],["current",{"_index":299,"title":{},"body":{"injectables/LoggerService.html":{}}}],["data",{"_index":139,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["datasources",{"_index":93,"title":{},"body":{"modules/CommonModule.html":{}}}],["db",{"_index":94,"title":{},"body":{"modules/CommonModule.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["delete",{"_index":202,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["delete(':id",{"_index":200,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deleted",{"_index":203,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["documentation",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":135,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["dtos/create",{"_index":215,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dtos/update",{"_index":216,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["duty",{"_index":411,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["employee",{"_index":130,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["employee.controller",{"_index":233,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.repository",{"_index":145,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"modules/EmployeeModule.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["employee.service",{"_index":214,"title":{},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{}}}],["employee.ts",{"_index":128,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["employee.ts:14",{"_index":140,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{}}}],["employee.ts:16",{"_index":339,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{}}}],["employee.ts:17",{"_index":338,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{}}}],["employee.ts:21",{"_index":279,"title":{},"body":{"classes/GetEmployeeHandler.html":{}}}],["employee.ts:23",{"_index":180,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["employee.ts:27",{"_index":344,"title":{},"body":{"classes/UpdateEmployeeHandler.html":{}}}],["employee.ts:33",{"_index":280,"title":{},"body":{"classes/GetEmployeeHandler.html":{}}}],["employee.ts:35",{"_index":182,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["employee.ts:39",{"_index":345,"title":{},"body":{"classes/UpdateEmployeeHandler.html":{}}}],["employee.ts:9",{"_index":138,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{}}}],["employee/employee.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["employeecommandhandlers",{"_index":235,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeecommands",{"_index":234,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeecontroller",{"_index":183,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeemodule",{"_index":43,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employeequeries",{"_index":237,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeequeryhandlers",{"_index":238,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeerepository",{"_index":144,"title":{"injectables/EmployeeRepository.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"overview.html":{}}}],["employees",{"_index":153,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["employeeservice",{"_index":213,"title":{"injectables/EmployeeService.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":117,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment",{"_index":118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["er",{"_index":413,"title":{},"body":{"index.html":{}}}],["ex",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["ex.getstatus",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["excluding",{"_index":317,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["execute",{"_index":158,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["execute(undefined",{"_index":181,"title":{},"body":{"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["execution",{"_index":156,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["executor",{"_index":155,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["explicitconnect",{"_index":97,"title":{},"body":{"modules/CommonModule.html":{}}}],["export",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["express",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":103,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/LoggerService.html":{}}}],["fields",{"_index":209,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["filter",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["filters",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["find",{"_index":257,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["findonebyid",{"_index":248,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["findonebyid(id",{"_index":255,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["fingerprint",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":198,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["get(':id",{"_index":195,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getbyid",{"_index":187,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getbyid(@param('id",{"_index":219,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getbyid(id",{"_index":194,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployeehandler",{"_index":276,"title":{"classes/GetEmployeeHandler.html":{}},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"coverage.html":{}}}],["getemployeequery",{"_index":266,"title":{"classes/GetEmployeeQuery.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"coverage.html":{}}}],["getting",{"_index":409,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":105,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getvalue(value",{"_index":108,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":74,"title":{},"body":{"modules/CommonModule.html":{}}}],["handler",{"_index":148,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["health",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["hello",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["hi",{"_index":218,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["http",{"_index":186,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["httpexception",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["icommandhandler",{"_index":142,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["id",{"_index":197,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["identifier",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":171,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["implements",{"_index":151,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["information",{"_index":318,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["inject",{"_index":98,"title":{},"body":{"modules/CommonModule.html":{}}}],["injectable",{"_index":99,"title":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":100,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{},"overview.html":{}}}],["intercept",{"_index":319,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["intercept(_",{"_index":320,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["interceptor",{"_index":316,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["interseptor`s",{"_index":324,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["iqueryhandler",{"_index":278,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["isenum",{"_index":168,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isenum(rank",{"_index":176,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isglobal",{"_index":86,"title":{},"body":{"modules/CommonModule.html":{}}}],["isnotempty",{"_index":165,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isnumber",{"_index":167,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isoptional",{"_index":166,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isstring",{"_index":164,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["jwt",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["keyof",{"_index":123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["license",{"_index":425,"title":{},"body":{"properties.html":{}}}],["logger",{"_index":290,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":72,"title":{"injectables/LoggerService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":287,"title":{},"body":{"injectables/LoggerService.html":{}}}],["login",{"_index":177,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["map",{"_index":330,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["map((value",{"_index":333,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":112,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeService.html":{}}}],["methods",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["mit",{"_index":426,"title":{},"body":{"properties.html":{}}}],["model",{"_index":414,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":115,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["native",{"_index":289,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nest",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":329,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["nestjs",{"_index":82,"title":{},"body":{"modules/CommonModule.html":{},"injectables/EmployeeRepository.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/RemovePayloadInterceptor.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":76,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":78,"title":{},"body":{"modules/CommonModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["next",{"_index":321,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["next.handle().pipe",{"_index":332,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["node",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":211,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["notfoundexception('employee",{"_index":223,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["null",{"_index":271,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["number",{"_index":174,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["observable",{"_index":327,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["optional",{"_index":116,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["overview",{"_index":418,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":358,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":122,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["param('id",{"_index":226,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["parser",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":178,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["payload.ts",{"_index":315,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["payload.ts:15",{"_index":323,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["personal_key",{"_index":175,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["post",{"_index":191,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["prefix",{"_index":185,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["prisma",{"_index":83,"title":{},"body":{"modules/CommonModule.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"dependencies.html":{}}}],["prisma.employeecreateinput",{"_index":137,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeService.html":{}}}],["prisma.employeeupdateinput",{"_index":337,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["prisma.employeewhereuniqueinput",{"_index":282,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["prisma/client",{"_index":143,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"dependencies.html":{}}}],["prismamodule",{"_index":81,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismamodule.forrootasync",{"_index":88,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismaoptions",{"_index":92,"title":{},"body":{"modules/CommonModule.html":{}}}],["prismaservice",{"_index":243,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["private",{"_index":268,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/RemovePayloadInterceptor.html":{}}}],["promise",{"_index":159,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["properties",{"_index":132,"title":{"properties.html":{}},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{},"properties.html":{}}}],["provide",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["public",{"_index":133,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["put",{"_index":212,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["put(':id",{"_index":206,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["queries",{"_index":239,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["queries/get",{"_index":267,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["query",{"_index":253,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["querybus",{"_index":251,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["queryhandler",{"_index":281,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["queryhandler(getemployeequery",{"_index":284,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["rank",{"_index":170,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["raven",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["raveninterceptor",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["ravenmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":134,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["reflect",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":188,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["remove(@param('id",{"_index":228,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["remove(id",{"_index":199,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["removed",{"_index":259,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["removeemployeecommand",{"_index":264,"title":{"classes/RemoveEmployeeCommand.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"coverage.html":{}}}],["removeemployeecommand(id",{"_index":275,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["removeemployeehandler",{"_index":311,"title":{"classes/RemoveEmployeeHandler.html":{}},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"coverage.html":{}}}],["removepayloadinterceptor",{"_index":313,"title":{"injectables/RemovePayloadInterceptor.html":{}},"body":{"injectables/RemovePayloadInterceptor.html":{},"coverage.html":{}}}],["repository",{"_index":152,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"injectables/EmployeeRepository.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["response",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["rootservice",{"_index":104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["route",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{}}}],["rxjs",{"_index":331,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{},"dependencies.html":{}}}],["salary",{"_index":173,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["sentry/node",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["sentry/profiling",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["service",{"_index":102,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{}}}],["services/config.service",{"_index":79,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/logger.service",{"_index":80,"title":{},"body":{"modules/CommonModule.html":{}}}],["set",{"_index":302,"title":{},"body":{"injectables/LoggerService.html":{}}}],["setctx",{"_index":293,"title":{},"body":{"injectables/LoggerService.html":{}}}],["setctx(ctx",{"_index":300,"title":{},"body":{"injectables/LoggerService.html":{}}}],["shared/classes/base.repository",{"_index":245,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["shared/interfaces/env",{"_index":120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["started",{"_index":410,"title":{"index.html":{}},"body":{}}],["statements",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["stream",{"_index":328,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["super",{"_index":121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["super(ctx",{"_index":304,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super(prisma.employee",{"_index":246,"title":{},"body":{"injectables/EmployeeRepository.html":{}}}],["support",{"_index":415,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":172,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["svg",{"_index":416,"title":{},"body":{"modules.html":{}}}],["system",{"_index":412,"title":{},"body":{"index.html":{}}}],["t",{"_index":111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["table",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmployeeController.html":{}}}],["this.commandbus.execute",{"_index":269,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.commandbus.execute(new",{"_index":273,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.context",{"_index":306,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.employeeservice.create(dto",{"_index":225,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findonebyid(id",{"_index":221,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.remove(id",{"_index":229,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.update(id",{"_index":227,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.get(value",{"_index":124,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.querybus.execute",{"_index":272,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.repository.create(dto",{"_index":161,"title":{},"body":{"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{}}}],["this.repository.findone(dto",{"_index":285,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["this.repository.remove(id",{"_index":312,"title":{},"body":{"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{}}}],["this.repository.update(id",{"_index":342,"title":{},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["this.setcontext(ctx",{"_index":307,"title":{},"body":{"injectables/LoggerService.html":{}}}],["throw",{"_index":222,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["transformer",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":87,"title":{},"body":{"modules/CommonModule.html":{}}}],["tslib",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"classes/CreateEmployeeCommand.html":{},"classes/CreateEmployeeHandler.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeRepository.html":{},"injectables/EmployeeService.html":{},"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{},"injectables/LoggerService.html":{},"classes/RemoveEmployeeCommand.html":{},"classes/RemoveEmployeeHandler.html":{},"injectables/RemovePayloadInterceptor.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["typed",{"_index":113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["undefined",{"_index":335,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["unique",{"_index":283,"title":{},"body":{"classes/GetEmployeeHandler.html":{},"classes/GetEmployeeQuery.html":{}}}],["update",{"_index":189,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["update(id",{"_index":204,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updated",{"_index":208,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{}}}],["updateemployeecommand",{"_index":262,"title":{"classes/UpdateEmployeeCommand.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["updateemployeecommand(id",{"_index":274,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updateemployeedto",{"_index":205,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateemployeehandler",{"_index":341,"title":{"classes/UpdateEmployeeHandler.html":{}},"body":{"classes/UpdateEmployeeCommand.html":{},"classes/UpdateEmployeeHandler.html":{},"coverage.html":{}}}],["url",{"_index":95,"title":{},"body":{"modules/CommonModule.html":{}}}],["usefactory",{"_index":89,"title":{},"body":{"modules/CommonModule.html":{}}}],["usevalue",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":169,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"dependencies.html":{}}}],["value",{"_index":114,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RemovePayloadInterceptor.html":{}}}],["value.password",{"_index":334,"title":{},"body":{"injectables/RemovePayloadInterceptor.html":{}}}],["variable",{"_index":119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["version",{"_index":423,"title":{},"body":{"properties.html":{}}}],["void",{"_index":303,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yes",{"_index":296,"title":{},"body":{"injectables/LoggerService.html":{}}}],["zone.js",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller for checking server health\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hello\n                        \n                    \n                \n            \n            \n                \n                        \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/app/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n                        Test GET route\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Hello response\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n/**\n * Controller for checking server health\n */\n@Controller()\nexport class AppController {\n  /**\n   * Test GET route\n   * @returns {string} Hello response\n   */\n  @Get()\n  hello(): string {\n    return 'Hello API!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            EmployeeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RavenInterceptor, RavenModule } from 'nest-raven';\nimport { HttpException, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nimport { AppController } from './app.controller';\n\nimport { EmployeeModule } from '../employee/employee.module';\nimport { CommonModule } from '../common/common.module';\n\n@Module({\n  imports: [CommonModule, RavenModule, EmployeeModule],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useValue: new RavenInterceptor({\n        filters: [\n          {\n            type: HttpException,\n            filter: (ex: HttpException) => 500 >= ex.getStatus(),\n          },\n        ],\n      }),\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nLoggerService \n\nLoggerService \n\n\n\nCommonModule\n\nCommonModule\n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nConfigService\n\nConfigService\n\nCommonModule -->\n\nConfigService->CommonModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCommonModule -->\n\nLoggerService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { ConfigService } from './services/config.service';\nimport { LoggerService } from './services/logger.service';\nimport { PrismaModule } from 'nestjs-prisma';\n\n@Global()\n@Module({\n  imports: [\n    CqrsModule.forRoot(),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    PrismaModule.forRootAsync({\n      isGlobal: true,\n      useFactory: async (config: ConfigService) => {\n        return {\n          prismaOptions: {\n            datasources: {\n              db: {\n                url: config.getValue('DATABASE_URL'),\n              },\n            },\n          },\n          explicitConnect: true,\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [ConfigService, LoggerService],\n  exports: [ConfigService, LoggerService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/services/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for config\n\n            \n\n            \n                Extends\n            \n            \n                        RootService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/common/services/config.service.ts:12\n                            \n                        \n\n                \n                    \n                            Config constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(value)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/config.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Method for get typed value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ENV name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                Environment variable\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { ENV } from 'shared/interfaces/env';\n\nimport { ConfigService as RootService } from '@nestjs/config';\n\n/**\n * Service for config\n * @constructor\n */\n@Injectable()\nexport class ConfigService extends RootService {\n  /**\n   * Config constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Method for get typed value\n   * @param {string} value ENV name\n   * @returns {any} Environment variable\n   */\n  getValue(value: keyof ENV) {\n    return this.get(value) as T;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeCommand.html":{"url":"classes/CreateEmployeeCommand.html","title":"class - CreateEmployeeCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/create-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Create employee commamnd\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                dto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: Prisma.EmployeeCreateInput)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/create-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                    Prisma.EmployeeCreateInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New employee data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dto\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.EmployeeCreateInput\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/create-employee.ts:14\n                        \n                    \n\n            \n                \n                    New employee data\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Create employee commamnd\n */\nexport class CreateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeCreateInput} dto New employee data\n   */\n  constructor(public readonly dto: Prisma.EmployeeCreateInput) {}\n}\n\n/**\n * Create employee command handler\n */\n@CommandHandler(CreateEmployeeCommand)\nexport class CreateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {CreateEmployeeCommand} dto Execution command\n   * @returns {Employee} Created employee\n   */\n  async execute({ dto }: CreateEmployeeCommand): Promise {\n    return await this.repository.create(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/dtos/create-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Create employee DTO\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsNumber,\n  IsEnum,\n} from 'class-validator';\n\nimport { Rank } from '@prisma/client';\n\n/**\n * Create employee DTO\n */\nexport class CreateEmployeeDto {\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  surname?: string;\n\n  /**\n   * @ignore\n   */\n  @IsNumber()\n  @IsOptional()\n  salary?: number;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  personal_key?: string;\n\n  /**\n   * @ignore\n   */\n  @IsEnum(Rank)\n  @IsOptional()\n  rank?: Rank;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeHandler.html":{"url":"classes/CreateEmployeeHandler.html","title":"class - CreateEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/create-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Create employee command handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/create-employee.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: CreateEmployeeCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/commands/create-employee.ts:35\n                        \n                    \n\n\n            \n                \n                        Command executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateEmployeeCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Created employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Create employee commamnd\n */\nexport class CreateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeCreateInput} dto New employee data\n   */\n  constructor(public readonly dto: Prisma.EmployeeCreateInput) {}\n}\n\n/**\n * Create employee command handler\n */\n@CommandHandler(CreateEmployeeCommand)\nexport class CreateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {CreateEmployeeCommand} dto Execution command\n   * @returns {Employee} Created employee\n   */\n  async execute({ dto }: CreateEmployeeCommand): Promise {\n    return await this.repository.create(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n            \n                Description\n            \n            \n                Employee HTTP controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:55\n                        \n                    \n\n\n            \n                \n                        Create employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Created employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:31\n                        \n                    \n\n\n            \n                \n                        Test get route\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:41\n                        \n                    \n\n\n            \n                \n                        Get employee by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Found employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:83\n                        \n                    \n\n\n            \n                \n                        Delete employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Deleted employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.controller.ts:66\n                        \n                    \n\n\n            \n                \n                        Update employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated employee fields\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Updated employee\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\n\nimport { Employee } from '@prisma/client';\n\nimport { EmployeeService } from './employee.service';\n\nimport { CreateEmployeeDto } from './dtos/create-employee';\nimport { UpdateEmployeeDto } from './dtos/update-employee';\n\n/**\n * Employee HTTP controller\n */\n@Controller('employee')\nexport class EmployeeController {\n  constructor(private employeeService: EmployeeService) {}\n\n  /**\n   * Test get route\n   * @returns\n   */\n  @Get()\n  get() {\n    return 'Hi';\n  }\n\n  /**\n   * Get employee by id\n   * @param {string} id Employee ID\n   * @returns {Employee} Found employee\n   */\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise {\n    const employee = await this.employeeService.findOneById(id);\n\n    if (!employee) throw new NotFoundException('Employee not found');\n\n    return employee;\n  }\n\n  /**\n   * Create employee\n   * @param {CreateEmployeeDto} dto Employee data\n   * @returns {Employee} Created employee\n   */\n  @Post()\n  async create(@Body() dto: CreateEmployeeDto): Promise {\n    return await this.employeeService.create(dto);\n  }\n\n  /**\n   * Update employee\n   * @param {string} id Employee ID\n   * @param {UpdateEmployeeDto} dto Updated employee fields\n   * @returns {Employee} Updated employee\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() dto: UpdateEmployeeDto\n  ): Promise {\n    const employee = await this.employeeService.update(id, dto);\n\n    if (!employee) throw new NotFoundException('Employee not found');\n\n    return employee;\n  }\n\n  /**\n   * Delete employee\n   * @param {string} id Employee ID\n   * @returns {Employee} Deleted employee\n   */\n  @Delete(':id')\n  async remove(@Param('id') id: string): Promise {\n    return await this.employeeService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nEmployeeRepository\n\nEmployeeRepository\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nEmployeeRepository->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeRepository\n                        \n                        \n                            EmployeeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { EmployeeController } from './employee.controller';\n\nimport { EmployeeRepository } from './employee.repository';\nimport { EmployeeService } from './employee.service';\n\nimport { EmployeeCommands, EmployeeCommandHandlers } from './commands';\nimport { EmployeeQueries, EmployeeQueryHandlers } from './queries';\n\n@Module({\n  controllers: [EmployeeController],\n  providers: [\n    ...EmployeeCommands,\n    ...EmployeeQueries,\n    ...EmployeeCommandHandlers,\n    ...EmployeeQueryHandlers,\n    EmployeeService,\n    EmployeeRepository,\n  ],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeRepository.html":{"url":"injectables/EmployeeRepository.html","title":"injectable - EmployeeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/employee.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Employee repository\n\n            \n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/employee.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Repository constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { PrismaService } from 'nestjs-prisma';\nimport { Injectable } from '@nestjs/common';\nimport { Employee } from '@prisma/client';\n\nimport { BaseRepository } from 'shared/classes/base.repository';\n\n/**\n * Employee repository\n */\n@Injectable()\nexport class EmployeeRepository extends BaseRepository {\n  /**\n   * Repository constructor\n   * @param {PrismaService} prisma Prisma service\n   */\n  constructor(private prisma: PrismaService) {\n    super(prisma.employee);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/employee.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Employee service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/employee.service.ts:16\n                            \n                        \n\n                \n                    \n                            Service constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Command executor\n\n                                                        \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Query executor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: Prisma.EmployeeCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Create method\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        Prisma.EmployeeCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Created employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Method for find employee by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Found employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Method for remove employee\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Removed employee\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/employee.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Method for update employee by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Employee ID\n\n                                            \n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated employee fields\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Updated employee\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { Employee, Prisma } from '@prisma/client';\nimport { Injectable } from '@nestjs/common';\n\nimport { CreateEmployeeCommand } from './commands/create-employee';\nimport { UpdateEmployeeCommand } from './commands/update-employee';\nimport { RemoveEmployeeCommand } from './commands/remove-employee';\n\nimport { GetEmployeeQuery } from './queries/get-employee';\n\nimport { UpdateEmployeeDto } from './dtos/update-employee';\n/**\n * Employee service\n */\n@Injectable()\nexport class EmployeeService {\n  /**\n   * Service constructor\n   * @param {CommandBus} commandBus Command executor\n   * @param {QueryBus} queryBus Query executor\n   */\n  constructor(private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  /**\n   * Create method\n   * @param {Prisma.EmployeeCreateInput} dto Employee data\n   * @returns {Employee} Created employee\n   */\n  async create(dto: Prisma.EmployeeCreateInput): Promise {\n    return await this.commandBus.execute(\n      new CreateEmployeeCommand(dto)\n    );\n  }\n\n  /**\n   * Method for find employee by id\n   * @param {string} id Employee ID\n   * @returns {Employee | null} Found employee\n   */\n  async findOneById(id: string): Promise {\n    return await this.queryBus.execute(\n      new GetEmployeeQuery({ id })\n    );\n  }\n\n  /**\n   * Method for update employee by id\n   * @param {string} id Employee ID\n   * @param {UpdateEmployeeDto} dto Updated employee fields\n   * @returns {Employee | null} Updated employee\n   */\n  async update(id: string, dto: UpdateEmployeeDto): Promise {\n    return await this.commandBus.execute(new UpdateEmployeeCommand(id, dto));\n  }\n\n  /**\n   * Method for remove employee\n   * @param {string} id Employee ID\n   * @returns {Employee | null} Removed employee\n   */\n  async remove(id: string): Promise {\n    return await this.commandBus.execute(new RemoveEmployeeCommand(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEmployeeHandler.html":{"url":"classes/GetEmployeeHandler.html","title":"class - GetEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/queries/get-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Get employee query handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/queries/get-employee.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: GetEmployeeQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/queries/get-employee.ts:33\n                        \n                    \n\n\n            \n                \n                        Query executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            GetEmployeeQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Found employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Get employee query\n */\nexport class GetEmployeeQuery {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeWhereUniqueInput} dto Employee unique fields\n   */\n  constructor(public readonly dto: Prisma.EmployeeWhereUniqueInput) {}\n}\n\n/**\n * Get employee query handler\n */\n@QueryHandler(GetEmployeeQuery)\nexport class GetEmployeeHandler implements IQueryHandler {\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Query executor\n   * @param {GetEmployeeQuery} dto Execution query\n   * @returns {Employee | null} Found employee\n   */\n  async execute({ dto }: GetEmployeeQuery): Promise {\n    return this.repository.findOne(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEmployeeQuery.html":{"url":"classes/GetEmployeeQuery.html","title":"class - GetEmployeeQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEmployeeQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/queries/get-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Get employee query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                dto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: Prisma.EmployeeWhereUniqueInput)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/queries/get-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                    Prisma.EmployeeWhereUniqueInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Employee unique fields\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dto\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.EmployeeWhereUniqueInput\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/queries/get-employee.ts:14\n                        \n                    \n\n            \n                \n                    Employee unique fields\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Get employee query\n */\nexport class GetEmployeeQuery {\n  /**\n   * Constructor\n   * @param {Prisma.EmployeeWhereUniqueInput} dto Employee unique fields\n   */\n  constructor(public readonly dto: Prisma.EmployeeWhereUniqueInput) {}\n}\n\n/**\n * Get employee query handler\n */\n@QueryHandler(GetEmployeeQuery)\nexport class GetEmployeeHandler implements IQueryHandler {\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Query executor\n   * @param {GetEmployeeQuery} dto Execution query\n   * @returns {Employee | null} Found employee\n   */\n  async execute({ dto }: GetEmployeeQuery): Promise {\n    return this.repository.findOne(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/services/logger.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for logging based on native logger\n\n            \n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ctx\n                            \n                            \n                                setCtx\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ctx?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/common/services/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            Logger constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Logging context\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ctx\n                        \n                    \n                \n            \n            \n                \nctx()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/logger.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Get context\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Current context\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCtx\n                        \n                    \n                \n            \n            \n                \nsetCtx(ctx: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/services/logger.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Set context\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    New context\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable } from '@nestjs/common';\n\n/**\n * Service for logging based on native logger\n * @constructor\n */\n@Injectable()\nexport class LoggerService extends ConsoleLogger {\n  /**\n   * Logger constructor\n   * @param {string} ctx Logging context\n   */\n  constructor(ctx?: string) {\n    super(ctx || 'Comduty');\n  }\n\n  /**\n   * Get context\n   * @returns {string} Current context\n   */\n  ctx(): string {\n    return this.context;\n  }\n\n  /**\n   * Set context\n   * @param {string} ctx New context\n   */\n  setCtx(ctx: string) {\n    this.setContext(ctx);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveEmployeeCommand.html":{"url":"classes/RemoveEmployeeCommand.html","title":"class - RemoveEmployeeCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveEmployeeCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/remove-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Remove employee command\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/remove-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of removed employee\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/remove-employee.ts:14\n                        \n                    \n\n            \n                \n                    ID of removed employee\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Remove employee command\n */\nexport class RemoveEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id ID of removed employee\n   */\n  constructor(public readonly id: string) {}\n}\n\n/**\n * Remove employee command handler\n */\n@CommandHandler(RemoveEmployeeCommand)\nexport class RemoveEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {RemoveEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Removed employee\n   */\n  async execute({ id }: RemoveEmployeeCommand): Promise {\n    return await this.repository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveEmployeeHandler.html":{"url":"classes/RemoveEmployeeHandler.html","title":"class - RemoveEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/remove-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Remove employee command handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/remove-employee.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: RemoveEmployeeCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/commands/remove-employee.ts:35\n                        \n                    \n\n\n            \n                \n                        Command executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RemoveEmployeeCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Removed employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Remove employee command\n */\nexport class RemoveEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id ID of removed employee\n   */\n  constructor(public readonly id: string) {}\n}\n\n/**\n * Remove employee command handler\n */\n@CommandHandler(RemoveEmployeeCommand)\nexport class RemoveEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {RemoveEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Removed employee\n   */\n  async execute({ id }: RemoveEmployeeCommand): Promise {\n    return await this.repository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemovePayloadInterceptor.html":{"url":"injectables/RemovePayloadInterceptor.html","title":"injectable - RemovePayloadInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RemovePayloadInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/common/interceptors/remove-payload.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for excluding private information\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_: any, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/common/interceptors/remove-payload.ts:15\n                        \n                    \n\n\n            \n                \n                        Interseptor`s executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Context\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Call handler\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Next stream\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable, map } from 'rxjs';\n\n/**\n * Interceptor for excluding private information\n */\n@Injectable()\nexport class RemovePayloadInterceptor implements NestInterceptor {\n  /**\n   * Interseptor`s executor\n   * @param {any} _ Context\n   * @param {CallHandler} next Call handler\n   * @returns {Observable} Next stream\n   */\n  intercept(_: any, next: CallHandler): Observable {\n    return next.handle().pipe(\n      map((value) => {\n        if (value !== null && value.password) value.password = undefined;\n        return value;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeCommand.html":{"url":"classes/UpdateEmployeeCommand.html","title":"class - UpdateEmployeeCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/update-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Update employee command\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                dto\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, dto: Prisma.EmployeeUpdateInput)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/update-employee.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Employee ID\n\n                                                        \n                                                \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                    Prisma.EmployeeUpdateInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Employee fields for update\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dto\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.EmployeeUpdateInput\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/update-employee.ts:17\n                        \n                    \n\n            \n                \n                    Employee fields for update\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/employee/commands/update-employee.ts:16\n                        \n                    \n\n            \n                \n                    Employee ID\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Update employee command\n */\nexport class UpdateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id Employee ID\n   * @param {Prisma.EmployeeUpdateInput} dto Employee fields for update\n   */\n  constructor(\n    public readonly id: string,\n    public readonly dto: Prisma.EmployeeUpdateInput\n  ) {}\n}\n\n/**\n * Update employee command handler\n */\n@CommandHandler(UpdateEmployeeCommand)\nexport class UpdateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {UpdateEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Updated employee\n   */\n  async execute({ id, dto }: UpdateEmployeeCommand): Promise {\n    return await this.repository.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/dtos/update-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Update employee DTO\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsNumber,\n  IsEnum,\n} from 'class-validator';\n\nimport { Rank } from '@prisma/client';\n\n/**\n * Update employee DTO\n */\nexport class UpdateEmployeeDto {\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  name?: string;\n  /**\n   * @ignore\n   */\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  surname?: string;\n\n  /**\n   * @ignore\n   */\n  @IsNumber()\n  @IsOptional()\n  salary?: number;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  personal_key?: string;\n\n  /**\n   * @ignore\n   */\n  @IsEnum(Rank)\n  @IsOptional()\n  rank?: Rank;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  login?: string;\n\n  /**\n   * @ignore\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeHandler.html":{"url":"classes/UpdateEmployeeHandler.html","title":"class - UpdateEmployeeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/employee/commands/update-employee.ts\n        \n\n\n            \n                Description\n            \n            \n                Update employee command handler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: EmployeeRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/employee/commands/update-employee.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        EmployeeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Repository for employees\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: UpdateEmployeeCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/employee/commands/update-employee.ts:39\n                        \n                    \n\n\n            \n                \n                        Command executor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UpdateEmployeeCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Updated employee\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { Prisma, Employee } from '@prisma/client';\n\nimport { EmployeeRepository } from '../employee.repository';\n\n/**\n * Update employee command\n */\nexport class UpdateEmployeeCommand {\n  /**\n   * Constructor\n   * @param {string} id Employee ID\n   * @param {Prisma.EmployeeUpdateInput} dto Employee fields for update\n   */\n  constructor(\n    public readonly id: string,\n    public readonly dto: Prisma.EmployeeUpdateInput\n  ) {}\n}\n\n/**\n * Update employee command handler\n */\n@CommandHandler(UpdateEmployeeCommand)\nexport class UpdateEmployeeHandler\n  implements ICommandHandler\n{\n  /**\n   * Constructor\n   * @param {EmployeeRepository} repository Repository for employees\n   */\n  constructor(private repository: EmployeeRepository) {}\n\n  /**\n   * Command executor\n   * @param {UpdateEmployeeCommand} dto Execution command\n   * @returns {Employee | null} Updated employee\n   */\n  async execute({ id, dto }: UpdateEmployeeCommand): Promise {\n    return await this.repository.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/common/interceptors/remove-payload.ts\n            \n            injectable\n            RemovePayloadInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/common/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/create-employee.ts\n            \n            class\n            CreateEmployeeCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/create-employee.ts\n            \n            class\n            CreateEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/remove-employee.ts\n            \n            class\n            RemoveEmployeeCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/remove-employee.ts\n            \n            class\n            RemoveEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/update-employee.ts\n            \n            class\n            UpdateEmployeeCommand\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/api/src/employee/commands/update-employee.ts\n            \n            class\n            UpdateEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/dtos/create-employee.ts\n            \n            class\n            CreateEmployeeDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/employee/dtos/update-employee.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/api/src/employee/employee.repository.ts\n            \n            injectable\n            EmployeeRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/employee/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/api/src/employee/queries/get-employee.ts\n            \n            class\n            GetEmployeeHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/employee/queries/get-employee.ts\n            \n            class\n            GetEmployeeQuery\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~17.0.0\n        \n            @angular/common : ~17.0.0\n        \n            @angular/compiler : ~17.0.0\n        \n            @angular/core : ~17.0.0\n        \n            @angular/forms : ~17.0.0\n        \n            @angular/platform-browser : ~17.0.0\n        \n            @angular/platform-browser-dynamic : ~17.0.0\n        \n            @angular/router : ~17.0.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @prisma/client : ^5.7.1\n        \n            @sentry/node : ^7.92.0\n        \n            @sentry/profiling-node : ^1.3.3\n        \n            axios : ^1.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            express-fingerprint : ^1.2.2\n        \n            nest-raven : ^10.0.1\n        \n            nestjs-prisma : ^0.22.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nComduty\nDuty system\n\n  ER model\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nCommonModule -->\n\nConfigService->CommonModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCommonModule -->\n\nLoggerService->CommonModule\n\n\n\n\n\nEmployeeRepository\n\nEmployeeRepository\n\nEmployeeModule -->\n\nEmployeeRepository->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
